{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/MessageBox.vue?c64b","webpack:///./src/components/SearchBar.vue?8a7f","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/UserInfo.vue?5a7c","webpack:///./src/components/PlayerInfo.vue?2358","webpack:///./src/components/HelloWorld.vue?c7e8","webpack:///./src/components/PlayerList.vue?b5f3","webpack:///./src/components/PanelMessage.vue?1774","webpack:///./src/components/PlayerBox.vue?6f0e","webpack:///./src/components/Panel.vue?d54b","webpack:///./src/components/PanelLeft.vue?91e1","webpack:///./src/views/Home.vue?c4a6","webpack:///./src/components/HelloWorld.vue?3d8d","webpack:///./src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?0596","webpack:///./src/components/HelloWorld.vue?f177","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/router/index.ts","webpack:///./src/store/modules/profile/actions.ts","webpack:///./src/store/modules/profile/mutations.ts","webpack:///./src/store/modules/profile/index.ts","webpack:///./src/store/modules/user/actions.ts","webpack:///./src/store/modules/user/mutations.ts","webpack:///./src/store/modules/user/index.ts","webpack:///./src/proto/index.js","webpack:///./src/net/netlogin.ts","webpack:///./src/net/netdefine.ts","webpack:///./src/net/net.ts","webpack:///./src/net/netfriend.ts","webpack:///./src/store/modules/session/actions.ts","webpack:///./src/store/modules/session/mutations.ts","webpack:///./src/store/modules/session/index.ts","webpack:///./src/store/mutations.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?93e6","webpack:///./src/views/Index.vue?c889","webpack:///./src/components/Panel.vue?1235","webpack:///./src/components/PanelLeft.vue?5f4b","webpack:///./src/components/UserInfo.vue?98cc","webpack:///./src/components/UserInfo.vue","webpack:///./src/components/UserInfo.vue?4d9b","webpack:///./src/components/UserInfo.vue?edca","webpack:///./src/components/SearchBar.vue?ac55","webpack:///./src/components/SearchBar.vue","webpack:///./src/components/SearchBar.vue?08e3","webpack:///./src/components/SearchBar.vue?c293","webpack:///./src/components/PlayerList.vue?c30a","webpack:///./src/components/PlayerBox.vue?817a","webpack:///./src/utils.ts","webpack:///./src/define.ts","webpack:///./src/components/PlayerBox.vue","webpack:///./src/components/PlayerBox.vue?cfb4","webpack:///./src/components/PlayerBox.vue?0cf1","webpack:///./src/components/PlayerList.vue","webpack:///./src/components/PlayerList.vue?a410","webpack:///./src/components/PlayerList.vue?d221","webpack:///./src/components/PanelLeft.vue","webpack:///./src/components/PanelLeft.vue?a03b","webpack:///./src/components/PanelLeft.vue?4d8c","webpack:///./src/components/PanelRight.vue?982e","webpack:///./src/components/PlayerInfo.vue?8cd9","webpack:///./src/components/PlayerInfo.vue","webpack:///./src/components/PlayerInfo.vue?f496","webpack:///./src/components/PlayerInfo.vue?bccb","webpack:///./src/components/PanelMessage.vue?21a4","webpack:///./src/components/MessageContainer.vue?3c0e","webpack:///./src/components/MessageList.vue?3330","webpack:///./src/components/MessageBox.vue?5d21","webpack:///./src/components/MessageBox.vue","webpack:///./src/components/MessageBox.vue?18dd","webpack:///./src/components/MessageBox.vue?d2a7","webpack:///./src/components/MessageList.vue","webpack:///./src/components/MessageList.vue?8e30","webpack:///./src/components/MessageList.vue?d9be","webpack:///./src/components/MessageContainer.vue","webpack:///./src/components/MessageContainer.vue?df34","webpack:///./src/components/MessageContainer.vue?26dc","webpack:///./src/components/MessageInput.vue?5065","webpack:///./src/components/MessageInput.vue","webpack:///./src/components/MessageInput.vue?8cc6","webpack:///./src/components/MessageInput.vue?1b7e","webpack:///./src/components/PanelMessage.vue","webpack:///./src/components/PanelMessage.vue?a6ca","webpack:///./src/components/PanelMessage.vue?d606","webpack:///./src/components/PanelRight.vue","webpack:///./src/components/PanelRight.vue?6ef3","webpack:///./src/components/PanelRight.vue?1b44","webpack:///./src/components/Panel.vue","webpack:///./src/components/Panel.vue?7d6f","webpack:///./src/components/Panel.vue?bad3","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?4488","webpack:///./src/views/Index.vue?efa4","webpack:///./src/App.vue","webpack:///./src/App.vue?0ab4","webpack:///./src/App.vue?bff9","webpack:///./src/main.ts","webpack:///./src/components/MessageInput.vue?9946","webpack:///./src/components/MessageContainer.vue?d49e","webpack:///./src/views/Index.vue?d914"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","code","keys","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","_v","_s","msg","_m","extend","props","String","component","components","HelloWorld","use","routes","path","Home","router","base","actions","loginSucc","payload","commit","reset","mutations","LOGIN_SUCC","state","user","RESET","pid","sName","sGameFlag","iFlag","login","namespaced","profile","addUser","deleteUser","updateSearchResult","ret","updateNewMsgCnt","updateChatGM","updateMark","updateChatTime","ADD_USER","iUnreadCnt","unreadCnt","lGM","curChatGM","users","set","DEL_USER","delete","UPDATE_SEARCH_RESULT","searchResult","UPDATE_NEWMSGCNT","newMsgCnt","iSender","iCnt","UPDATE_MARK","iMarked","UPDATE_CHATGM","sPlayer","UPDATE_CHATTIME","iTime","iChatTime","$Reader","$protobuf","$Writer","$util","$root","friend","GS2CNewMsgCnt","properties","encode","writer","uint32","sint32","encodeDelimited","ldelim","decode","reader","end","len","pos","tag","skipType","ProtocolError","instance","decodeDelimited","verify","isInteger","fromObject","toObject","options","defaults","toJSON","constructor","toJSONOptions","GS2CSendFrdMsg","tFrdMsg","emptyArray","FrdMsg","fork","Array","isArray","TypeError","arrays","sMsg","string","isString","GS2CSendFrdInfo","iOnline","iGrade","iServer","sPlatform","iMoneyMax","GS2CSearchResult","tRet","SearchResult","GS2CNotify","sText","GS2ChatPlayer","C2GSNewFrdMsg","iTarget","C2GSReadFrdMsg","C2GSReplyFrdMsg","C2GSGetFrdInfo","C2GSSearchFriend","sKey","C2GSGetHistoryMsg","curidx","C2GSEnterChat","act","C2GSMarkChat","C2GSDelChat","GS2CLoginCode","eLogincode","int32","enums","Code","valuesById","values","GS2CLoginSucc","gamelist","C2GSVertify","sToken","netcommand","PROTOFILE","NetCommand","eProtofile","iCmd","sEncodepkg","newBuffer","bytes","base64","C2SCommand","1","Send","subName","log","$store","dispatch","CODE","SUCCEED","$message","NETERR","$confirm","confirmButtonText","cancelButtonText","then","catch","NOACCOUNT","TOKENERR","S2CCommand","2","DecodeAndDispatch","sEncodePkg","info","pbmsg","eProtofile2Module","mainPkg","mainMessage","$socket","send","EncodeAndSend","sSubname","sProtofile","subCommand","subMessage","subPkg","finish","store","userState","sessionState","session","currentSessionId","forEach","frdMsg","3","4","5","6","7","8","9","sendMessage","rootState","dMsg","receiveMessage","selectSession","SEND_MESSAGE","sessions","ss","rState","sender","list","Date","now","RECEIVE_MESSAGE","unshift","SELECT_SESSION","gm","oldPid","idx","indexOf","SOCKET_ONOPEN","currentTarget","socket","isConnected","SOCKET_ONCLOSE","SOCKET_ONERROR","SOCKET_ONMESSAGE","SOCKET_RECONNECT","count","SOCKET_RECONNECT_ERROR","Store","directives","rawName","expression","style","height","clientHeight","on","onSelectGame","model","callback","$$v","gameflag","_l","item","label","disabled","computed","lst","methods","token","$route","query","location","href","pathname","staticStyle","searchPlayer","loading","handleSelect","inputSearch","debounce","watch","queryString","lazySearch","trim","player","class","active","$event","onSelectSession","marginBottom","gray","utils","GameIcon","DefaultIcon","onCommand","slot","action","_e","_f","IMG_TYPE","Money2VIP","100000","60000","40000","20000","10000","5000","2000","648","100","0","GetVIP","iMoney","VIP","lMoney","Number","sort","a","b","HOST_IMG","PWD_IMG","GetImgUrl","sn","img","gameFlag","OPTIONS","width","quality","createThumbnail","sourceBlob","opts","FileReader","image","Image","canvas","ctx","getContext","thumbnailScale","thumbnailWidth","thumbnailHeight","drawImage","toBlob","readAsDataURL","uploadImage","content","small","big","base64Header","replace","blob","reader2","uploadContent","url","config","headers","sContent","post","PRODUCTION","HOST","BIT_SUPER_GM","lastMsg","cmd","isSuperGM","description","filters","PlayerBox","players","iUnreadCntA","iUnreadCntB","UserInfo","SearchBar","PlayerList","isOnline","playerName","ref","onCopy","sid","sDesc","u","copyBtn","duration","mounted","Clipboard","clipboard","$refs","copy","always","smooth","handleScroll","opacity","AlphaLoadMoreBtn","loadMoreMessage","messages","isSelf","time","date","format","isGM","reg","match","groups","MessageBox","MessageList","scrollview","btnHeight","scrollTop","onSelectImage","nativeOn","_k","keyCode","ctrlKey","onSubmit","textarea","imageVisible","clearInputFile","pasteImageData","onClearPasteImageData","onSubmitImageData","imageSourceBlob","Blob","that","onpaste","ev","clipboardData","items","preventDefault","getAsFile","size","showImageBeforeSend","ondrop","dataTransfer","join","f","getElementById","imgFile","files","serialnum","onloadend","MessageContainer","MessageInput","PlayerInfo","PanelMessage","PanelLeft","PanelRight","Panel","innerHeight","onresize","Index","$alert","productionTip","passToStoreHandler","eventName","next","arrayBuffer","pkg","Uint8Array","reconnection","reconnectionAttempts","reconnectionDelay","render","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASY,EAAe5B,GACvB,OAAOyB,EAAoBI,EAAI,OAAS,CAAC,MAAQ,SAAS7B,IAAUA,GAAW,IAAM,CAAC,MAAQ,YAAYA,GAAW,MAItH,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU+B,QAGnC,IAAIC,EAASJ,EAAiB5B,GAAY,CACzCK,EAAGL,EACHiC,GAAG,EACHF,QAAS,IAUV,OANAjB,EAAQd,GAAUW,KAAKqB,EAAOD,QAASC,EAAQA,EAAOD,QAASL,GAG/DM,EAAOC,GAAI,EAGJD,EAAOD,QAKfL,EAAoBQ,EAAI,SAAuBjC,GAC9C,IAAIkC,EAAW,GAKXC,EAAqBxB,EAAgBX,GACzC,GAA0B,IAAvBmC,EAGF,GAAGA,EACFD,EAAStB,KAAKuB,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBxB,EAAgBX,GAAW,CAACsC,EAASC,MAE3DL,EAAStB,KAAKuB,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbpB,EAAoBqB,IACvBL,EAAOM,aAAa,QAAStB,EAAoBqB,IAElDL,EAAOO,IAAMpB,EAAe5B,GAG5B,IAAIiD,EAAQ,IAAIC,MAChBV,EAAmB,SAAUW,GAE5BV,EAAOW,QAAUX,EAAOY,OAAS,KACjCC,aAAaT,GACb,IAAIU,EAAQ5C,EAAgBX,GAC5B,GAAa,IAAVuD,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOX,IACpDC,EAAMW,QAAU,iBAAmB5D,EAAU,cAAgBwD,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEVtC,EAAgBX,QAAW+D,IAG7B,IAAIlB,EAAUmB,YAAW,WACxBxB,EAAiB,CAAEiB,KAAM,UAAWE,OAAQlB,MAC1C,MACHA,EAAOW,QAAUX,EAAOY,OAASb,EACjCE,SAASuB,KAAKC,YAAYzB,GAG5B,OAAOJ,QAAQ8B,IAAIjC,IAIpBT,EAAoB2C,EAAIvD,EAGxBY,EAAoB4C,EAAI1C,EAGxBF,EAAoB6C,EAAI,SAASxC,EAAS+B,EAAMU,GAC3C9C,EAAoB+C,EAAE1C,EAAS+B,IAClCtD,OAAOkE,eAAe3C,EAAS+B,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE9C,EAAoBmD,EAAI,SAAS9C,GACX,qBAAX+C,QAA0BA,OAAOC,aAC1CvE,OAAOkE,eAAe3C,EAAS+C,OAAOC,YAAa,CAAEC,MAAO,WAE7DxE,OAAOkE,eAAe3C,EAAS,aAAc,CAAEiD,OAAO,KAQvDtD,EAAoBuD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtD,EAAoBsD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK5E,OAAO6E,OAAO,MAGvB,GAFA3D,EAAoBmD,EAAEO,GACtB5E,OAAOkE,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtD,EAAoB6C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR1D,EAAoB8D,EAAI,SAASxD,GAChC,IAAIwC,EAASxC,GAAUA,EAAOmD,WAC7B,WAAwB,OAAOnD,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAN,EAAoB6C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR9C,EAAoB+C,EAAI,SAASgB,EAAQC,GAAY,OAAOlF,OAAOC,UAAUC,eAAeC,KAAK8E,EAAQC,IAGzGhE,EAAoBI,EAAI,IAGxBJ,EAAoBiE,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAWjF,KAAK0E,KAAKO,GAC5CA,EAAWjF,KAAOf,EAClBgG,EAAaA,EAAWG,QACxB,IAAI,IAAI5F,EAAI,EAAGA,EAAIyF,EAAWvF,OAAQF,IAAKP,EAAqBgG,EAAWzF,IAC3E,IAAIU,EAAsBiF,EAI1B/E,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6EC5NT,yBAAwb,EAAG,G,6GCA3b,yBAA2iB,EAAG,G,oCCA9iB,yBAA0iB,EAAG,G,8CCA7iB,IAAI+E,EAAM,CACT,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,gBAAiB,OACjB,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,O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","file":"js/app.3eea56bf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"68edd069\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBox.vue?vue&type=style&index=0&id=43c7937a&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBox.vue?vue&type=style&index=0&id=43c7937a&lang=less&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchBar.vue?vue&type=style&index=0&id=bc285682&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchBar.vue?vue&type=style&index=0&id=bc285682&lang=less&scoped=true&\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=style&index=0&id=1f74b13d&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=style&index=0&id=1f74b13d&lang=less&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerInfo.vue?vue&type=style&index=0&id=7181686c&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerInfo.vue?vue&type=style&index=0&id=7181686c&lang=less&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=85d80dfe&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=85d80dfe&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerList.vue?vue&type=style&index=0&id=19a415aa&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerList.vue?vue&type=style&index=0&id=19a415aa&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelMessage.vue?vue&type=style&index=0&id=234961f5&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelMessage.vue?vue&type=style&index=0&id=234961f5&lang=less&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerBox.vue?vue&type=style&index=0&id=7422f0e0&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerBox.vue?vue&type=style&index=0&id=7422f0e0&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelLeft.vue?vue&type=style&index=0&id=60aa27f3&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelLeft.vue?vue&type=style&index=0&id=60aa27f3&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('img',{attrs:{\"alt\":\"Vue logo\",\"src\":\"/assets/logo.png\"}}),_c('HelloWorld',{attrs:{\"msg\":\"Welcome to Your Vue.js App\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_vm._m(0),_c('h3',[_vm._v(\"Installed CLI Plugins\")]),_vm._m(1),_c('h3',[_vm._v(\"Essential Links\")]),_vm._m(2),_c('h3',[_vm._v(\"Ecosystem\")]),_vm._m(3)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" For a guide and recipes on how to configure / customize this project,\"),_c('br'),_vm._v(\" check out the \"),_c('a',{attrs:{\"href\":\"https://cli.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-cli documentation\")]),_vm._v(\". \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"babel\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-typescript\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"typescript\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-router\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"router\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-vuex\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vuex\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"eslint\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Core Docs\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://forum.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Forum\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://chat.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Community Chat\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://twitter.com/vuejs\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Twitter\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://news.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"News\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://router.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-router\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vuex.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vuex\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-devtools#vue-devtools\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-devtools\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vue-loader.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-loader\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/awesome-vue\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"awesome-vue\")])])])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'HelloWorld',\r\n  props: {\r\n    msg: String,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=85d80dfe&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=85d80dfe&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"85d80dfe\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"home\">\r\n    <img alt=\"Vue logo\" src=\"/assets/logo.png\">\r\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport HelloWorld from '@/components/HelloWorld.vue';\r\n\r\nexport default {\r\n  name: 'home',\r\n  components: {\r\n    HelloWorld,\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=29b2e364&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport Home from '../views/Home.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'about',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue'),\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes,\r\n});\r\n\r\nexport default router;\r\n","// profile/actions.ts\r\nimport { ActionTree } from 'vuex';\r\n// import axios from 'axios';\r\nimport { ProfileState, User } from './types';\r\nimport { RootState } from '@/store/types';\r\n\r\nconst actions: ActionTree<ProfileState, RootState> = {\r\n  loginSucc: ({ commit }, payload) => commit('LOGIN_SUCC', payload),\r\n  reset: ({ commit }, payload) => commit('RESET', payload),\r\n};\r\n\r\nexport default actions;\r\n","import { MutationTree } from 'vuex';\r\nimport { ProfileState } from './types';\r\n\r\nconst mutations: MutationTree<ProfileState> = {\r\n  LOGIN_SUCC(state, payload) {\r\n    state.user = payload;\r\n  },\r\n  RESET(state) {\r\n    state.user = { pid: 0, sName: '未登录', sGameFlag: 'sx4', iFlag: 0 };\r\n    state.login = false;\r\n  },\r\n};\r\n\r\nexport default mutations;\r\n","import { Module } from 'vuex';\r\nimport actions from './actions';\r\nimport mutations from './mutations';\r\nimport { ProfileState } from './types';\r\nimport { RootState } from '@/store/types';\r\n\r\nexport const state: ProfileState = {\r\n  user: { pid: 0, sName: '未登录', sGameFlag: 'sx4', iFlag: 0 },\r\n  login: false,\r\n};\r\n\r\nconst namespaced: boolean = true;\r\n\r\nconst profile: Module<ProfileState, RootState> = {\r\n  namespaced,\r\n  state,\r\n  // getters,\r\n  actions,\r\n  mutations,\r\n};\r\n\r\nexport default profile;\r\n","// user/actions.ts\r\nimport { ActionTree } from 'vuex';\r\nimport { UserState } from './types';\r\nimport { RootState } from '@/store/types';\r\n\r\nconst actions: ActionTree<UserState, RootState> = {\r\n  addUser: ({ commit }, user) => commit('ADD_USER', user),\r\n  deleteUser: ({ commit }, pid) => commit('DEL_USER', pid),\r\n  updateSearchResult: ({ commit }, ret) => commit('UPDATE_SEARCH_RESULT', ret),\r\n  updateNewMsgCnt: ({ commit }, payload) => commit('UPDATE_NEWMSGCNT', payload),\r\n  updateChatGM: ({ commit }, payload) => commit('UPDATE_CHATGM', payload),\r\n  updateMark: ({ commit }, payload) => commit('UPDATE_MARK', payload),\r\n  updateChatTime: ({ commit }, payload) => commit('UPDATE_CHATTIME', payload),\r\n  reset: ({ commit }, payload) => commit('RESET', payload),\r\n};\r\n\r\nexport default actions;\r\n","import Vue from 'vue';\r\nimport { MutationTree } from 'vuex';\r\nimport { UserState, User } from './types';\r\nimport { friend } from '@/proto';\r\n\r\nconst mutations: MutationTree<UserState> = {\r\n  // 增加用户\r\n  ADD_USER(state, payload) {\r\n    const user: User = payload;\r\n    user.iUnreadCnt = state.unreadCnt[user.pid];\r\n    user.lGM = state.curChatGM[user.pid] ? state.curChatGM[user.pid] : [];\r\n    if (!state.users[user.pid]) {\r\n      Vue.set(state.users, user.pid, user);\r\n    } else {\r\n      state.users[user.pid] = user;\r\n    }\r\n  },\r\n  // 增加用户\r\n  DEL_USER(state, payload) {\r\n    const pid: number = payload;\r\n    if (state.users[pid]) {\r\n      Vue.delete(state.users, pid);\r\n    }\r\n  },\r\n  // 搜索结果\r\n  UPDATE_SEARCH_RESULT(state, payload) {\r\n    state.searchResult = payload;\r\n  },\r\n  UPDATE_NEWMSGCNT(state, payload) {\r\n    const newMsgCnt: friend.IGS2CNewMsgCnt = payload;\r\n    const { iSender } = newMsgCnt;\r\n    state.unreadCnt[iSender] = newMsgCnt.iCnt;\r\n    if (state.users[iSender]) {\r\n      state.users[iSender].iUnreadCnt = newMsgCnt.iCnt;\r\n    }\r\n  },\r\n  UPDATE_MARK(state, payload) {\r\n    const ret: { pid: number, iMarked: number } = payload;\r\n    const { pid, iMarked } = ret;\r\n    if (state.users[pid]) {\r\n      state.users[pid].iMarked = iMarked;\r\n    }\r\n  },\r\n  UPDATE_CHATGM(state, payload) {\r\n    const ret: friend.IGS2ChatPlayer = payload;\r\n    const { pid } = ret;\r\n    if (!state.curChatGM[pid]) {\r\n      Vue.set(state.curChatGM, pid, ret.sPlayer as string[]);\r\n    } else {\r\n      state.curChatGM[pid] = ret.sPlayer as string[];\r\n    }\r\n    if (state.users[pid]) {\r\n      state.users[pid].lGM = ret.sPlayer as string[];\r\n    }\r\n  },\r\n  UPDATE_CHATTIME(state, payload) {\r\n    const { iSender, iTime } = payload as { iSender: number, iTime: number };\r\n    if (state.users[iSender]) {\r\n      state.users[iSender].iChatTime = iTime;\r\n    }\r\n  },\r\n  RESET(state) {\r\n    state.users = {};\r\n    state.searchResult = [];\r\n    state.unreadCnt = {};\r\n    state.curChatGM = {};\r\n  },\r\n};\r\n\r\nexport default mutations;\r\n","import { Module } from 'vuex';\r\n// import { getters } from './getters';\r\nimport actions from './actions';\r\nimport mutations from './mutations';\r\nimport { UserState } from './types';\r\nimport { RootState } from '@/store/types';\r\n\r\nexport const state: UserState = {\r\n  users: {},\r\n  searchResult: [],\r\n  unreadCnt: {},\r\n  curChatGM: {},\r\n};\r\n\r\nconst namespaced: boolean = true;\r\n\r\nconst user: Module<UserState, RootState> = {\r\n  namespaced,\r\n  state,\r\n  // getters,\r\n  actions,\r\n  mutations,\r\n};\r\n\r\nexport default user;\r\n","/*eslint-disable*/\r\nimport * as $protobuf from \"protobufjs/minimal\";\r\n\r\n// Common aliases\r\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\r\n\r\n// Exported root namespace\r\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\r\n\r\nexport const friend = $root.friend = (() => {\r\n\r\n    /**\r\n     * Namespace friend.\r\n     * @exports friend\r\n     * @namespace\r\n     */\r\n    const friend = {};\r\n\r\n    friend.GS2CNewMsgCnt = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CNewMsgCnt.\r\n         * @memberof friend\r\n         * @interface IGS2CNewMsgCnt\r\n         * @property {number} iSender GS2CNewMsgCnt iSender\r\n         * @property {number} iCnt GS2CNewMsgCnt iCnt\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CNewMsgCnt.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2CNewMsgCnt.\r\n         * @implements IGS2CNewMsgCnt\r\n         * @constructor\r\n         * @param {friend.IGS2CNewMsgCnt=} [properties] Properties to set\r\n         */\r\n        function GS2CNewMsgCnt(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CNewMsgCnt iSender.\r\n         * @member {number} iSender\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @instance\r\n         */\r\n        GS2CNewMsgCnt.prototype.iSender = 0;\r\n\r\n        /**\r\n         * GS2CNewMsgCnt iCnt.\r\n         * @member {number} iCnt\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @instance\r\n         */\r\n        GS2CNewMsgCnt.prototype.iCnt = 0;\r\n\r\n        /**\r\n         * Creates a new GS2CNewMsgCnt instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {friend.IGS2CNewMsgCnt=} [properties] Properties to set\r\n         * @returns {friend.GS2CNewMsgCnt} GS2CNewMsgCnt instance\r\n         */\r\n        GS2CNewMsgCnt.create = function create(properties) {\r\n            return new GS2CNewMsgCnt(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CNewMsgCnt message. Does not implicitly {@link friend.GS2CNewMsgCnt.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {friend.IGS2CNewMsgCnt} message GS2CNewMsgCnt message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CNewMsgCnt.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.iSender);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.iCnt);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CNewMsgCnt message, length delimited. Does not implicitly {@link friend.GS2CNewMsgCnt.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {friend.IGS2CNewMsgCnt} message GS2CNewMsgCnt message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CNewMsgCnt.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CNewMsgCnt message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2CNewMsgCnt} GS2CNewMsgCnt\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CNewMsgCnt.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CNewMsgCnt();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.iSender = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.iCnt = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"iSender\"))\r\n                throw $util.ProtocolError(\"missing required 'iSender'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iCnt\"))\r\n                throw $util.ProtocolError(\"missing required 'iCnt'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CNewMsgCnt message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2CNewMsgCnt} GS2CNewMsgCnt\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CNewMsgCnt.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CNewMsgCnt message.\r\n         * @function verify\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CNewMsgCnt.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.iSender))\r\n                return \"iSender: integer expected\";\r\n            if (!$util.isInteger(message.iCnt))\r\n                return \"iCnt: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CNewMsgCnt message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2CNewMsgCnt} GS2CNewMsgCnt\r\n         */\r\n        GS2CNewMsgCnt.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2CNewMsgCnt)\r\n                return object;\r\n            let message = new $root.friend.GS2CNewMsgCnt();\r\n            if (object.iSender != null)\r\n                message.iSender = object.iSender | 0;\r\n            if (object.iCnt != null)\r\n                message.iCnt = object.iCnt | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CNewMsgCnt message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @static\r\n         * @param {friend.GS2CNewMsgCnt} message GS2CNewMsgCnt\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CNewMsgCnt.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.iSender = 0;\r\n                object.iCnt = 0;\r\n            }\r\n            if (message.iSender != null && message.hasOwnProperty(\"iSender\"))\r\n                object.iSender = message.iSender;\r\n            if (message.iCnt != null && message.hasOwnProperty(\"iCnt\"))\r\n                object.iCnt = message.iCnt;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CNewMsgCnt to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2CNewMsgCnt\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CNewMsgCnt.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2CNewMsgCnt;\r\n    })();\r\n\r\n    friend.GS2CSendFrdMsg = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CSendFrdMsg.\r\n         * @memberof friend\r\n         * @interface IGS2CSendFrdMsg\r\n         * @property {number} pid GS2CSendFrdMsg pid\r\n         * @property {Array.<friend.GS2CSendFrdMsg.IFrdMsg>|null} [tFrdMsg] GS2CSendFrdMsg tFrdMsg\r\n         * @property {number|null} [iFlag] GS2CSendFrdMsg iFlag\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CSendFrdMsg.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2CSendFrdMsg.\r\n         * @implements IGS2CSendFrdMsg\r\n         * @constructor\r\n         * @param {friend.IGS2CSendFrdMsg=} [properties] Properties to set\r\n         */\r\n        function GS2CSendFrdMsg(properties) {\r\n            this.tFrdMsg = [];\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CSendFrdMsg pid.\r\n         * @member {number} pid\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @instance\r\n         */\r\n        GS2CSendFrdMsg.prototype.pid = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdMsg tFrdMsg.\r\n         * @member {Array.<friend.GS2CSendFrdMsg.IFrdMsg>} tFrdMsg\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @instance\r\n         */\r\n        GS2CSendFrdMsg.prototype.tFrdMsg = $util.emptyArray;\r\n\r\n        /**\r\n         * GS2CSendFrdMsg iFlag.\r\n         * @member {number} iFlag\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @instance\r\n         */\r\n        GS2CSendFrdMsg.prototype.iFlag = 0;\r\n\r\n        /**\r\n         * Creates a new GS2CSendFrdMsg instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdMsg=} [properties] Properties to set\r\n         * @returns {friend.GS2CSendFrdMsg} GS2CSendFrdMsg instance\r\n         */\r\n        GS2CSendFrdMsg.create = function create(properties) {\r\n            return new GS2CSendFrdMsg(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSendFrdMsg message. Does not implicitly {@link friend.GS2CSendFrdMsg.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdMsg} message GS2CSendFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSendFrdMsg.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            if (message.tFrdMsg != null && message.tFrdMsg.length)\r\n                for (let i = 0; i < message.tFrdMsg.length; ++i)\r\n                    $root.friend.GS2CSendFrdMsg.FrdMsg.encode(message.tFrdMsg[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\r\n            if (message.iFlag != null && message.hasOwnProperty(\"iFlag\"))\r\n                writer.uint32(/* id 3, wireType 0 =*/24).sint32(message.iFlag);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSendFrdMsg message, length delimited. Does not implicitly {@link friend.GS2CSendFrdMsg.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdMsg} message GS2CSendFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSendFrdMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSendFrdMsg message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2CSendFrdMsg} GS2CSendFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSendFrdMsg.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CSendFrdMsg();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    if (!(message.tFrdMsg && message.tFrdMsg.length))\r\n                        message.tFrdMsg = [];\r\n                    message.tFrdMsg.push($root.friend.GS2CSendFrdMsg.FrdMsg.decode(reader, reader.uint32()));\r\n                    break;\r\n                case 3:\r\n                    message.iFlag = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSendFrdMsg message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2CSendFrdMsg} GS2CSendFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSendFrdMsg.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CSendFrdMsg message.\r\n         * @function verify\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CSendFrdMsg.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (message.tFrdMsg != null && message.hasOwnProperty(\"tFrdMsg\")) {\r\n                if (!Array.isArray(message.tFrdMsg))\r\n                    return \"tFrdMsg: array expected\";\r\n                for (let i = 0; i < message.tFrdMsg.length; ++i) {\r\n                    let error = $root.friend.GS2CSendFrdMsg.FrdMsg.verify(message.tFrdMsg[i]);\r\n                    if (error)\r\n                        return \"tFrdMsg.\" + error;\r\n                }\r\n            }\r\n            if (message.iFlag != null && message.hasOwnProperty(\"iFlag\"))\r\n                if (!$util.isInteger(message.iFlag))\r\n                    return \"iFlag: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CSendFrdMsg message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2CSendFrdMsg} GS2CSendFrdMsg\r\n         */\r\n        GS2CSendFrdMsg.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2CSendFrdMsg)\r\n                return object;\r\n            let message = new $root.friend.GS2CSendFrdMsg();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.tFrdMsg) {\r\n                if (!Array.isArray(object.tFrdMsg))\r\n                    throw TypeError(\".friend.GS2CSendFrdMsg.tFrdMsg: array expected\");\r\n                message.tFrdMsg = [];\r\n                for (let i = 0; i < object.tFrdMsg.length; ++i) {\r\n                    if (typeof object.tFrdMsg[i] !== \"object\")\r\n                        throw TypeError(\".friend.GS2CSendFrdMsg.tFrdMsg: object expected\");\r\n                    message.tFrdMsg[i] = $root.friend.GS2CSendFrdMsg.FrdMsg.fromObject(object.tFrdMsg[i]);\r\n                }\r\n            }\r\n            if (object.iFlag != null)\r\n                message.iFlag = object.iFlag | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CSendFrdMsg message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @static\r\n         * @param {friend.GS2CSendFrdMsg} message GS2CSendFrdMsg\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CSendFrdMsg.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.arrays || options.defaults)\r\n                object.tFrdMsg = [];\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.iFlag = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.tFrdMsg && message.tFrdMsg.length) {\r\n                object.tFrdMsg = [];\r\n                for (let j = 0; j < message.tFrdMsg.length; ++j)\r\n                    object.tFrdMsg[j] = $root.friend.GS2CSendFrdMsg.FrdMsg.toObject(message.tFrdMsg[j], options);\r\n            }\r\n            if (message.iFlag != null && message.hasOwnProperty(\"iFlag\"))\r\n                object.iFlag = message.iFlag;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CSendFrdMsg to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2CSendFrdMsg\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CSendFrdMsg.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        GS2CSendFrdMsg.FrdMsg = (function() {\r\n\r\n            /**\r\n             * Properties of a FrdMsg.\r\n             * @memberof friend.GS2CSendFrdMsg\r\n             * @interface IFrdMsg\r\n             * @property {number} id FrdMsg id\r\n             * @property {number} iSender FrdMsg iSender\r\n             * @property {string} sName FrdMsg sName\r\n             * @property {string} sMsg FrdMsg sMsg\r\n             * @property {number} iTime FrdMsg iTime\r\n             */\r\n\r\n            /**\r\n             * Constructs a new FrdMsg.\r\n             * @memberof friend.GS2CSendFrdMsg\r\n             * @classdesc Represents a FrdMsg.\r\n             * @implements IFrdMsg\r\n             * @constructor\r\n             * @param {friend.GS2CSendFrdMsg.IFrdMsg=} [properties] Properties to set\r\n             */\r\n            function FrdMsg(properties) {\r\n                if (properties)\r\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                        if (properties[keys[i]] != null)\r\n                            this[keys[i]] = properties[keys[i]];\r\n            }\r\n\r\n            /**\r\n             * FrdMsg id.\r\n             * @member {number} id\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             */\r\n            FrdMsg.prototype.id = 0;\r\n\r\n            /**\r\n             * FrdMsg iSender.\r\n             * @member {number} iSender\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             */\r\n            FrdMsg.prototype.iSender = 0;\r\n\r\n            /**\r\n             * FrdMsg sName.\r\n             * @member {string} sName\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             */\r\n            FrdMsg.prototype.sName = \"\";\r\n\r\n            /**\r\n             * FrdMsg sMsg.\r\n             * @member {string} sMsg\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             */\r\n            FrdMsg.prototype.sMsg = \"\";\r\n\r\n            /**\r\n             * FrdMsg iTime.\r\n             * @member {number} iTime\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             */\r\n            FrdMsg.prototype.iTime = 0;\r\n\r\n            /**\r\n             * Creates a new FrdMsg instance using the specified properties.\r\n             * @function create\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {friend.GS2CSendFrdMsg.IFrdMsg=} [properties] Properties to set\r\n             * @returns {friend.GS2CSendFrdMsg.FrdMsg} FrdMsg instance\r\n             */\r\n            FrdMsg.create = function create(properties) {\r\n                return new FrdMsg(properties);\r\n            };\r\n\r\n            /**\r\n             * Encodes the specified FrdMsg message. Does not implicitly {@link friend.GS2CSendFrdMsg.FrdMsg.verify|verify} messages.\r\n             * @function encode\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {friend.GS2CSendFrdMsg.IFrdMsg} message FrdMsg message or plain object to encode\r\n             * @param {$protobuf.Writer} [writer] Writer to encode to\r\n             * @returns {$protobuf.Writer} Writer\r\n             */\r\n            FrdMsg.encode = function encode(message, writer) {\r\n                if (!writer)\r\n                    writer = $Writer.create();\r\n                writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.id);\r\n                writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.iSender);\r\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sName);\r\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.sMsg);\r\n                writer.uint32(/* id 5, wireType 0 =*/40).sint32(message.iTime);\r\n                return writer;\r\n            };\r\n\r\n            /**\r\n             * Encodes the specified FrdMsg message, length delimited. Does not implicitly {@link friend.GS2CSendFrdMsg.FrdMsg.verify|verify} messages.\r\n             * @function encodeDelimited\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {friend.GS2CSendFrdMsg.IFrdMsg} message FrdMsg message or plain object to encode\r\n             * @param {$protobuf.Writer} [writer] Writer to encode to\r\n             * @returns {$protobuf.Writer} Writer\r\n             */\r\n            FrdMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n                return this.encode(message, writer).ldelim();\r\n            };\r\n\r\n            /**\r\n             * Decodes a FrdMsg message from the specified reader or buffer.\r\n             * @function decode\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n             * @param {number} [length] Message length if known beforehand\r\n             * @returns {friend.GS2CSendFrdMsg.FrdMsg} FrdMsg\r\n             * @throws {Error} If the payload is not a reader or valid buffer\r\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n             */\r\n            FrdMsg.decode = function decode(reader, length) {\r\n                if (!(reader instanceof $Reader))\r\n                    reader = $Reader.create(reader);\r\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CSendFrdMsg.FrdMsg();\r\n                while (reader.pos < end) {\r\n                    let tag = reader.uint32();\r\n                    switch (tag >>> 3) {\r\n                    case 1:\r\n                        message.id = reader.sint32();\r\n                        break;\r\n                    case 2:\r\n                        message.iSender = reader.sint32();\r\n                        break;\r\n                    case 3:\r\n                        message.sName = reader.string();\r\n                        break;\r\n                    case 4:\r\n                        message.sMsg = reader.string();\r\n                        break;\r\n                    case 5:\r\n                        message.iTime = reader.sint32();\r\n                        break;\r\n                    default:\r\n                        reader.skipType(tag & 7);\r\n                        break;\r\n                    }\r\n                }\r\n                if (!message.hasOwnProperty(\"id\"))\r\n                    throw $util.ProtocolError(\"missing required 'id'\", { instance: message });\r\n                if (!message.hasOwnProperty(\"iSender\"))\r\n                    throw $util.ProtocolError(\"missing required 'iSender'\", { instance: message });\r\n                if (!message.hasOwnProperty(\"sName\"))\r\n                    throw $util.ProtocolError(\"missing required 'sName'\", { instance: message });\r\n                if (!message.hasOwnProperty(\"sMsg\"))\r\n                    throw $util.ProtocolError(\"missing required 'sMsg'\", { instance: message });\r\n                if (!message.hasOwnProperty(\"iTime\"))\r\n                    throw $util.ProtocolError(\"missing required 'iTime'\", { instance: message });\r\n                return message;\r\n            };\r\n\r\n            /**\r\n             * Decodes a FrdMsg message from the specified reader or buffer, length delimited.\r\n             * @function decodeDelimited\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n             * @returns {friend.GS2CSendFrdMsg.FrdMsg} FrdMsg\r\n             * @throws {Error} If the payload is not a reader or valid buffer\r\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n             */\r\n            FrdMsg.decodeDelimited = function decodeDelimited(reader) {\r\n                if (!(reader instanceof $Reader))\r\n                    reader = new $Reader(reader);\r\n                return this.decode(reader, reader.uint32());\r\n            };\r\n\r\n            /**\r\n             * Verifies a FrdMsg message.\r\n             * @function verify\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {Object.<string,*>} message Plain object to verify\r\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n             */\r\n            FrdMsg.verify = function verify(message) {\r\n                if (typeof message !== \"object\" || message === null)\r\n                    return \"object expected\";\r\n                if (!$util.isInteger(message.id))\r\n                    return \"id: integer expected\";\r\n                if (!$util.isInteger(message.iSender))\r\n                    return \"iSender: integer expected\";\r\n                if (!$util.isString(message.sName))\r\n                    return \"sName: string expected\";\r\n                if (!$util.isString(message.sMsg))\r\n                    return \"sMsg: string expected\";\r\n                if (!$util.isInteger(message.iTime))\r\n                    return \"iTime: integer expected\";\r\n                return null;\r\n            };\r\n\r\n            /**\r\n             * Creates a FrdMsg message from a plain object. Also converts values to their respective internal types.\r\n             * @function fromObject\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {Object.<string,*>} object Plain object\r\n             * @returns {friend.GS2CSendFrdMsg.FrdMsg} FrdMsg\r\n             */\r\n            FrdMsg.fromObject = function fromObject(object) {\r\n                if (object instanceof $root.friend.GS2CSendFrdMsg.FrdMsg)\r\n                    return object;\r\n                let message = new $root.friend.GS2CSendFrdMsg.FrdMsg();\r\n                if (object.id != null)\r\n                    message.id = object.id | 0;\r\n                if (object.iSender != null)\r\n                    message.iSender = object.iSender | 0;\r\n                if (object.sName != null)\r\n                    message.sName = String(object.sName);\r\n                if (object.sMsg != null)\r\n                    message.sMsg = String(object.sMsg);\r\n                if (object.iTime != null)\r\n                    message.iTime = object.iTime | 0;\r\n                return message;\r\n            };\r\n\r\n            /**\r\n             * Creates a plain object from a FrdMsg message. Also converts values to other types if specified.\r\n             * @function toObject\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @static\r\n             * @param {friend.GS2CSendFrdMsg.FrdMsg} message FrdMsg\r\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n             * @returns {Object.<string,*>} Plain object\r\n             */\r\n            FrdMsg.toObject = function toObject(message, options) {\r\n                if (!options)\r\n                    options = {};\r\n                let object = {};\r\n                if (options.defaults) {\r\n                    object.id = 0;\r\n                    object.iSender = 0;\r\n                    object.sName = \"\";\r\n                    object.sMsg = \"\";\r\n                    object.iTime = 0;\r\n                }\r\n                if (message.id != null && message.hasOwnProperty(\"id\"))\r\n                    object.id = message.id;\r\n                if (message.iSender != null && message.hasOwnProperty(\"iSender\"))\r\n                    object.iSender = message.iSender;\r\n                if (message.sName != null && message.hasOwnProperty(\"sName\"))\r\n                    object.sName = message.sName;\r\n                if (message.sMsg != null && message.hasOwnProperty(\"sMsg\"))\r\n                    object.sMsg = message.sMsg;\r\n                if (message.iTime != null && message.hasOwnProperty(\"iTime\"))\r\n                    object.iTime = message.iTime;\r\n                return object;\r\n            };\r\n\r\n            /**\r\n             * Converts this FrdMsg to JSON.\r\n             * @function toJSON\r\n             * @memberof friend.GS2CSendFrdMsg.FrdMsg\r\n             * @instance\r\n             * @returns {Object.<string,*>} JSON object\r\n             */\r\n            FrdMsg.prototype.toJSON = function toJSON() {\r\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n            };\r\n\r\n            return FrdMsg;\r\n        })();\r\n\r\n        return GS2CSendFrdMsg;\r\n    })();\r\n\r\n    friend.GS2CSendFrdInfo = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CSendFrdInfo.\r\n         * @memberof friend\r\n         * @interface IGS2CSendFrdInfo\r\n         * @property {number} pid GS2CSendFrdInfo pid\r\n         * @property {number} iOnline GS2CSendFrdInfo iOnline\r\n         * @property {string} sName GS2CSendFrdInfo sName\r\n         * @property {number} iGrade GS2CSendFrdInfo iGrade\r\n         * @property {number} iServer GS2CSendFrdInfo iServer\r\n         * @property {string} sPlatform GS2CSendFrdInfo sPlatform\r\n         * @property {number} iMoneyMax GS2CSendFrdInfo iMoneyMax\r\n         * @property {number} iChatTime GS2CSendFrdInfo iChatTime\r\n         * @property {number} iMarked GS2CSendFrdInfo iMarked\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CSendFrdInfo.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2CSendFrdInfo.\r\n         * @implements IGS2CSendFrdInfo\r\n         * @constructor\r\n         * @param {friend.IGS2CSendFrdInfo=} [properties] Properties to set\r\n         */\r\n        function GS2CSendFrdInfo(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CSendFrdInfo pid.\r\n         * @member {number} pid\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.pid = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iOnline.\r\n         * @member {number} iOnline\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iOnline = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo sName.\r\n         * @member {string} sName\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.sName = \"\";\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iGrade.\r\n         * @member {number} iGrade\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iGrade = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iServer.\r\n         * @member {number} iServer\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iServer = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo sPlatform.\r\n         * @member {string} sPlatform\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.sPlatform = \"\";\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iMoneyMax.\r\n         * @member {number} iMoneyMax\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iMoneyMax = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iChatTime.\r\n         * @member {number} iChatTime\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iChatTime = 0;\r\n\r\n        /**\r\n         * GS2CSendFrdInfo iMarked.\r\n         * @member {number} iMarked\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         */\r\n        GS2CSendFrdInfo.prototype.iMarked = 0;\r\n\r\n        /**\r\n         * Creates a new GS2CSendFrdInfo instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdInfo=} [properties] Properties to set\r\n         * @returns {friend.GS2CSendFrdInfo} GS2CSendFrdInfo instance\r\n         */\r\n        GS2CSendFrdInfo.create = function create(properties) {\r\n            return new GS2CSendFrdInfo(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSendFrdInfo message. Does not implicitly {@link friend.GS2CSendFrdInfo.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdInfo} message GS2CSendFrdInfo message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSendFrdInfo.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.iOnline);\r\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sName);\r\n            writer.uint32(/* id 4, wireType 0 =*/32).sint32(message.iGrade);\r\n            writer.uint32(/* id 5, wireType 0 =*/40).sint32(message.iServer);\r\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.sPlatform);\r\n            writer.uint32(/* id 7, wireType 0 =*/56).sint32(message.iMoneyMax);\r\n            writer.uint32(/* id 8, wireType 0 =*/64).sint32(message.iChatTime);\r\n            writer.uint32(/* id 9, wireType 0 =*/72).sint32(message.iMarked);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSendFrdInfo message, length delimited. Does not implicitly {@link friend.GS2CSendFrdInfo.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {friend.IGS2CSendFrdInfo} message GS2CSendFrdInfo message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSendFrdInfo.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSendFrdInfo message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2CSendFrdInfo} GS2CSendFrdInfo\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSendFrdInfo.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CSendFrdInfo();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.iOnline = reader.sint32();\r\n                    break;\r\n                case 3:\r\n                    message.sName = reader.string();\r\n                    break;\r\n                case 4:\r\n                    message.iGrade = reader.sint32();\r\n                    break;\r\n                case 5:\r\n                    message.iServer = reader.sint32();\r\n                    break;\r\n                case 6:\r\n                    message.sPlatform = reader.string();\r\n                    break;\r\n                case 7:\r\n                    message.iMoneyMax = reader.sint32();\r\n                    break;\r\n                case 8:\r\n                    message.iChatTime = reader.sint32();\r\n                    break;\r\n                case 9:\r\n                    message.iMarked = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iOnline\"))\r\n                throw $util.ProtocolError(\"missing required 'iOnline'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sName\"))\r\n                throw $util.ProtocolError(\"missing required 'sName'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iGrade\"))\r\n                throw $util.ProtocolError(\"missing required 'iGrade'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iServer\"))\r\n                throw $util.ProtocolError(\"missing required 'iServer'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sPlatform\"))\r\n                throw $util.ProtocolError(\"missing required 'sPlatform'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iMoneyMax\"))\r\n                throw $util.ProtocolError(\"missing required 'iMoneyMax'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iChatTime\"))\r\n                throw $util.ProtocolError(\"missing required 'iChatTime'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iMarked\"))\r\n                throw $util.ProtocolError(\"missing required 'iMarked'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSendFrdInfo message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2CSendFrdInfo} GS2CSendFrdInfo\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSendFrdInfo.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CSendFrdInfo message.\r\n         * @function verify\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CSendFrdInfo.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (!$util.isInteger(message.iOnline))\r\n                return \"iOnline: integer expected\";\r\n            if (!$util.isString(message.sName))\r\n                return \"sName: string expected\";\r\n            if (!$util.isInteger(message.iGrade))\r\n                return \"iGrade: integer expected\";\r\n            if (!$util.isInteger(message.iServer))\r\n                return \"iServer: integer expected\";\r\n            if (!$util.isString(message.sPlatform))\r\n                return \"sPlatform: string expected\";\r\n            if (!$util.isInteger(message.iMoneyMax))\r\n                return \"iMoneyMax: integer expected\";\r\n            if (!$util.isInteger(message.iChatTime))\r\n                return \"iChatTime: integer expected\";\r\n            if (!$util.isInteger(message.iMarked))\r\n                return \"iMarked: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CSendFrdInfo message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2CSendFrdInfo} GS2CSendFrdInfo\r\n         */\r\n        GS2CSendFrdInfo.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2CSendFrdInfo)\r\n                return object;\r\n            let message = new $root.friend.GS2CSendFrdInfo();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.iOnline != null)\r\n                message.iOnline = object.iOnline | 0;\r\n            if (object.sName != null)\r\n                message.sName = String(object.sName);\r\n            if (object.iGrade != null)\r\n                message.iGrade = object.iGrade | 0;\r\n            if (object.iServer != null)\r\n                message.iServer = object.iServer | 0;\r\n            if (object.sPlatform != null)\r\n                message.sPlatform = String(object.sPlatform);\r\n            if (object.iMoneyMax != null)\r\n                message.iMoneyMax = object.iMoneyMax | 0;\r\n            if (object.iChatTime != null)\r\n                message.iChatTime = object.iChatTime | 0;\r\n            if (object.iMarked != null)\r\n                message.iMarked = object.iMarked | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CSendFrdInfo message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @static\r\n         * @param {friend.GS2CSendFrdInfo} message GS2CSendFrdInfo\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CSendFrdInfo.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.iOnline = 0;\r\n                object.sName = \"\";\r\n                object.iGrade = 0;\r\n                object.iServer = 0;\r\n                object.sPlatform = \"\";\r\n                object.iMoneyMax = 0;\r\n                object.iChatTime = 0;\r\n                object.iMarked = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.iOnline != null && message.hasOwnProperty(\"iOnline\"))\r\n                object.iOnline = message.iOnline;\r\n            if (message.sName != null && message.hasOwnProperty(\"sName\"))\r\n                object.sName = message.sName;\r\n            if (message.iGrade != null && message.hasOwnProperty(\"iGrade\"))\r\n                object.iGrade = message.iGrade;\r\n            if (message.iServer != null && message.hasOwnProperty(\"iServer\"))\r\n                object.iServer = message.iServer;\r\n            if (message.sPlatform != null && message.hasOwnProperty(\"sPlatform\"))\r\n                object.sPlatform = message.sPlatform;\r\n            if (message.iMoneyMax != null && message.hasOwnProperty(\"iMoneyMax\"))\r\n                object.iMoneyMax = message.iMoneyMax;\r\n            if (message.iChatTime != null && message.hasOwnProperty(\"iChatTime\"))\r\n                object.iChatTime = message.iChatTime;\r\n            if (message.iMarked != null && message.hasOwnProperty(\"iMarked\"))\r\n                object.iMarked = message.iMarked;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CSendFrdInfo to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2CSendFrdInfo\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CSendFrdInfo.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2CSendFrdInfo;\r\n    })();\r\n\r\n    friend.GS2CSearchResult = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CSearchResult.\r\n         * @memberof friend\r\n         * @interface IGS2CSearchResult\r\n         * @property {Array.<friend.GS2CSearchResult.ISearchResult>|null} [tRet] GS2CSearchResult tRet\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CSearchResult.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2CSearchResult.\r\n         * @implements IGS2CSearchResult\r\n         * @constructor\r\n         * @param {friend.IGS2CSearchResult=} [properties] Properties to set\r\n         */\r\n        function GS2CSearchResult(properties) {\r\n            this.tRet = [];\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CSearchResult tRet.\r\n         * @member {Array.<friend.GS2CSearchResult.ISearchResult>} tRet\r\n         * @memberof friend.GS2CSearchResult\r\n         * @instance\r\n         */\r\n        GS2CSearchResult.prototype.tRet = $util.emptyArray;\r\n\r\n        /**\r\n         * Creates a new GS2CSearchResult instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {friend.IGS2CSearchResult=} [properties] Properties to set\r\n         * @returns {friend.GS2CSearchResult} GS2CSearchResult instance\r\n         */\r\n        GS2CSearchResult.create = function create(properties) {\r\n            return new GS2CSearchResult(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSearchResult message. Does not implicitly {@link friend.GS2CSearchResult.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {friend.IGS2CSearchResult} message GS2CSearchResult message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSearchResult.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.tRet != null && message.tRet.length)\r\n                for (let i = 0; i < message.tRet.length; ++i)\r\n                    $root.friend.GS2CSearchResult.SearchResult.encode(message.tRet[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CSearchResult message, length delimited. Does not implicitly {@link friend.GS2CSearchResult.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {friend.IGS2CSearchResult} message GS2CSearchResult message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CSearchResult.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSearchResult message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2CSearchResult} GS2CSearchResult\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSearchResult.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CSearchResult();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    if (!(message.tRet && message.tRet.length))\r\n                        message.tRet = [];\r\n                    message.tRet.push($root.friend.GS2CSearchResult.SearchResult.decode(reader, reader.uint32()));\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CSearchResult message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2CSearchResult} GS2CSearchResult\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CSearchResult.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CSearchResult message.\r\n         * @function verify\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CSearchResult.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.tRet != null && message.hasOwnProperty(\"tRet\")) {\r\n                if (!Array.isArray(message.tRet))\r\n                    return \"tRet: array expected\";\r\n                for (let i = 0; i < message.tRet.length; ++i) {\r\n                    let error = $root.friend.GS2CSearchResult.SearchResult.verify(message.tRet[i]);\r\n                    if (error)\r\n                        return \"tRet.\" + error;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CSearchResult message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2CSearchResult} GS2CSearchResult\r\n         */\r\n        GS2CSearchResult.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2CSearchResult)\r\n                return object;\r\n            let message = new $root.friend.GS2CSearchResult();\r\n            if (object.tRet) {\r\n                if (!Array.isArray(object.tRet))\r\n                    throw TypeError(\".friend.GS2CSearchResult.tRet: array expected\");\r\n                message.tRet = [];\r\n                for (let i = 0; i < object.tRet.length; ++i) {\r\n                    if (typeof object.tRet[i] !== \"object\")\r\n                        throw TypeError(\".friend.GS2CSearchResult.tRet: object expected\");\r\n                    message.tRet[i] = $root.friend.GS2CSearchResult.SearchResult.fromObject(object.tRet[i]);\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CSearchResult message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2CSearchResult\r\n         * @static\r\n         * @param {friend.GS2CSearchResult} message GS2CSearchResult\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CSearchResult.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.arrays || options.defaults)\r\n                object.tRet = [];\r\n            if (message.tRet && message.tRet.length) {\r\n                object.tRet = [];\r\n                for (let j = 0; j < message.tRet.length; ++j)\r\n                    object.tRet[j] = $root.friend.GS2CSearchResult.SearchResult.toObject(message.tRet[j], options);\r\n            }\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CSearchResult to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2CSearchResult\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CSearchResult.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        GS2CSearchResult.SearchResult = (function() {\r\n\r\n            /**\r\n             * Properties of a SearchResult.\r\n             * @memberof friend.GS2CSearchResult\r\n             * @interface ISearchResult\r\n             * @property {number} id SearchResult id\r\n             * @property {string} sName SearchResult sName\r\n             */\r\n\r\n            /**\r\n             * Constructs a new SearchResult.\r\n             * @memberof friend.GS2CSearchResult\r\n             * @classdesc Represents a SearchResult.\r\n             * @implements ISearchResult\r\n             * @constructor\r\n             * @param {friend.GS2CSearchResult.ISearchResult=} [properties] Properties to set\r\n             */\r\n            function SearchResult(properties) {\r\n                if (properties)\r\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                        if (properties[keys[i]] != null)\r\n                            this[keys[i]] = properties[keys[i]];\r\n            }\r\n\r\n            /**\r\n             * SearchResult id.\r\n             * @member {number} id\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @instance\r\n             */\r\n            SearchResult.prototype.id = 0;\r\n\r\n            /**\r\n             * SearchResult sName.\r\n             * @member {string} sName\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @instance\r\n             */\r\n            SearchResult.prototype.sName = \"\";\r\n\r\n            /**\r\n             * Creates a new SearchResult instance using the specified properties.\r\n             * @function create\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {friend.GS2CSearchResult.ISearchResult=} [properties] Properties to set\r\n             * @returns {friend.GS2CSearchResult.SearchResult} SearchResult instance\r\n             */\r\n            SearchResult.create = function create(properties) {\r\n                return new SearchResult(properties);\r\n            };\r\n\r\n            /**\r\n             * Encodes the specified SearchResult message. Does not implicitly {@link friend.GS2CSearchResult.SearchResult.verify|verify} messages.\r\n             * @function encode\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {friend.GS2CSearchResult.ISearchResult} message SearchResult message or plain object to encode\r\n             * @param {$protobuf.Writer} [writer] Writer to encode to\r\n             * @returns {$protobuf.Writer} Writer\r\n             */\r\n            SearchResult.encode = function encode(message, writer) {\r\n                if (!writer)\r\n                    writer = $Writer.create();\r\n                writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.id);\r\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.sName);\r\n                return writer;\r\n            };\r\n\r\n            /**\r\n             * Encodes the specified SearchResult message, length delimited. Does not implicitly {@link friend.GS2CSearchResult.SearchResult.verify|verify} messages.\r\n             * @function encodeDelimited\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {friend.GS2CSearchResult.ISearchResult} message SearchResult message or plain object to encode\r\n             * @param {$protobuf.Writer} [writer] Writer to encode to\r\n             * @returns {$protobuf.Writer} Writer\r\n             */\r\n            SearchResult.encodeDelimited = function encodeDelimited(message, writer) {\r\n                return this.encode(message, writer).ldelim();\r\n            };\r\n\r\n            /**\r\n             * Decodes a SearchResult message from the specified reader or buffer.\r\n             * @function decode\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n             * @param {number} [length] Message length if known beforehand\r\n             * @returns {friend.GS2CSearchResult.SearchResult} SearchResult\r\n             * @throws {Error} If the payload is not a reader or valid buffer\r\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n             */\r\n            SearchResult.decode = function decode(reader, length) {\r\n                if (!(reader instanceof $Reader))\r\n                    reader = $Reader.create(reader);\r\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CSearchResult.SearchResult();\r\n                while (reader.pos < end) {\r\n                    let tag = reader.uint32();\r\n                    switch (tag >>> 3) {\r\n                    case 1:\r\n                        message.id = reader.sint32();\r\n                        break;\r\n                    case 2:\r\n                        message.sName = reader.string();\r\n                        break;\r\n                    default:\r\n                        reader.skipType(tag & 7);\r\n                        break;\r\n                    }\r\n                }\r\n                if (!message.hasOwnProperty(\"id\"))\r\n                    throw $util.ProtocolError(\"missing required 'id'\", { instance: message });\r\n                if (!message.hasOwnProperty(\"sName\"))\r\n                    throw $util.ProtocolError(\"missing required 'sName'\", { instance: message });\r\n                return message;\r\n            };\r\n\r\n            /**\r\n             * Decodes a SearchResult message from the specified reader or buffer, length delimited.\r\n             * @function decodeDelimited\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n             * @returns {friend.GS2CSearchResult.SearchResult} SearchResult\r\n             * @throws {Error} If the payload is not a reader or valid buffer\r\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n             */\r\n            SearchResult.decodeDelimited = function decodeDelimited(reader) {\r\n                if (!(reader instanceof $Reader))\r\n                    reader = new $Reader(reader);\r\n                return this.decode(reader, reader.uint32());\r\n            };\r\n\r\n            /**\r\n             * Verifies a SearchResult message.\r\n             * @function verify\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {Object.<string,*>} message Plain object to verify\r\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n             */\r\n            SearchResult.verify = function verify(message) {\r\n                if (typeof message !== \"object\" || message === null)\r\n                    return \"object expected\";\r\n                if (!$util.isInteger(message.id))\r\n                    return \"id: integer expected\";\r\n                if (!$util.isString(message.sName))\r\n                    return \"sName: string expected\";\r\n                return null;\r\n            };\r\n\r\n            /**\r\n             * Creates a SearchResult message from a plain object. Also converts values to their respective internal types.\r\n             * @function fromObject\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {Object.<string,*>} object Plain object\r\n             * @returns {friend.GS2CSearchResult.SearchResult} SearchResult\r\n             */\r\n            SearchResult.fromObject = function fromObject(object) {\r\n                if (object instanceof $root.friend.GS2CSearchResult.SearchResult)\r\n                    return object;\r\n                let message = new $root.friend.GS2CSearchResult.SearchResult();\r\n                if (object.id != null)\r\n                    message.id = object.id | 0;\r\n                if (object.sName != null)\r\n                    message.sName = String(object.sName);\r\n                return message;\r\n            };\r\n\r\n            /**\r\n             * Creates a plain object from a SearchResult message. Also converts values to other types if specified.\r\n             * @function toObject\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @static\r\n             * @param {friend.GS2CSearchResult.SearchResult} message SearchResult\r\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n             * @returns {Object.<string,*>} Plain object\r\n             */\r\n            SearchResult.toObject = function toObject(message, options) {\r\n                if (!options)\r\n                    options = {};\r\n                let object = {};\r\n                if (options.defaults) {\r\n                    object.id = 0;\r\n                    object.sName = \"\";\r\n                }\r\n                if (message.id != null && message.hasOwnProperty(\"id\"))\r\n                    object.id = message.id;\r\n                if (message.sName != null && message.hasOwnProperty(\"sName\"))\r\n                    object.sName = message.sName;\r\n                return object;\r\n            };\r\n\r\n            /**\r\n             * Converts this SearchResult to JSON.\r\n             * @function toJSON\r\n             * @memberof friend.GS2CSearchResult.SearchResult\r\n             * @instance\r\n             * @returns {Object.<string,*>} JSON object\r\n             */\r\n            SearchResult.prototype.toJSON = function toJSON() {\r\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n            };\r\n\r\n            return SearchResult;\r\n        })();\r\n\r\n        return GS2CSearchResult;\r\n    })();\r\n\r\n    friend.GS2CNotify = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CNotify.\r\n         * @memberof friend\r\n         * @interface IGS2CNotify\r\n         * @property {string} sText GS2CNotify sText\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CNotify.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2CNotify.\r\n         * @implements IGS2CNotify\r\n         * @constructor\r\n         * @param {friend.IGS2CNotify=} [properties] Properties to set\r\n         */\r\n        function GS2CNotify(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CNotify sText.\r\n         * @member {string} sText\r\n         * @memberof friend.GS2CNotify\r\n         * @instance\r\n         */\r\n        GS2CNotify.prototype.sText = \"\";\r\n\r\n        /**\r\n         * Creates a new GS2CNotify instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {friend.IGS2CNotify=} [properties] Properties to set\r\n         * @returns {friend.GS2CNotify} GS2CNotify instance\r\n         */\r\n        GS2CNotify.create = function create(properties) {\r\n            return new GS2CNotify(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CNotify message. Does not implicitly {@link friend.GS2CNotify.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {friend.IGS2CNotify} message GS2CNotify message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CNotify.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sText);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CNotify message, length delimited. Does not implicitly {@link friend.GS2CNotify.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {friend.IGS2CNotify} message GS2CNotify message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CNotify.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CNotify message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2CNotify} GS2CNotify\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CNotify.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2CNotify();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.sText = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"sText\"))\r\n                throw $util.ProtocolError(\"missing required 'sText'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CNotify message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2CNotify} GS2CNotify\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CNotify.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CNotify message.\r\n         * @function verify\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CNotify.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isString(message.sText))\r\n                return \"sText: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CNotify message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2CNotify} GS2CNotify\r\n         */\r\n        GS2CNotify.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2CNotify)\r\n                return object;\r\n            let message = new $root.friend.GS2CNotify();\r\n            if (object.sText != null)\r\n                message.sText = String(object.sText);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CNotify message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2CNotify\r\n         * @static\r\n         * @param {friend.GS2CNotify} message GS2CNotify\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CNotify.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.sText = \"\";\r\n            if (message.sText != null && message.hasOwnProperty(\"sText\"))\r\n                object.sText = message.sText;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CNotify to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2CNotify\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CNotify.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2CNotify;\r\n    })();\r\n\r\n    friend.GS2ChatPlayer = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2ChatPlayer.\r\n         * @memberof friend\r\n         * @interface IGS2ChatPlayer\r\n         * @property {number} pid GS2ChatPlayer pid\r\n         * @property {Array.<string>|null} [sPlayer] GS2ChatPlayer sPlayer\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2ChatPlayer.\r\n         * @memberof friend\r\n         * @classdesc Represents a GS2ChatPlayer.\r\n         * @implements IGS2ChatPlayer\r\n         * @constructor\r\n         * @param {friend.IGS2ChatPlayer=} [properties] Properties to set\r\n         */\r\n        function GS2ChatPlayer(properties) {\r\n            this.sPlayer = [];\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2ChatPlayer pid.\r\n         * @member {number} pid\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @instance\r\n         */\r\n        GS2ChatPlayer.prototype.pid = 0;\r\n\r\n        /**\r\n         * GS2ChatPlayer sPlayer.\r\n         * @member {Array.<string>} sPlayer\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @instance\r\n         */\r\n        GS2ChatPlayer.prototype.sPlayer = $util.emptyArray;\r\n\r\n        /**\r\n         * Creates a new GS2ChatPlayer instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {friend.IGS2ChatPlayer=} [properties] Properties to set\r\n         * @returns {friend.GS2ChatPlayer} GS2ChatPlayer instance\r\n         */\r\n        GS2ChatPlayer.create = function create(properties) {\r\n            return new GS2ChatPlayer(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2ChatPlayer message. Does not implicitly {@link friend.GS2ChatPlayer.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {friend.IGS2ChatPlayer} message GS2ChatPlayer message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2ChatPlayer.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            if (message.sPlayer != null && message.sPlayer.length)\r\n                for (let i = 0; i < message.sPlayer.length; ++i)\r\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.sPlayer[i]);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2ChatPlayer message, length delimited. Does not implicitly {@link friend.GS2ChatPlayer.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {friend.IGS2ChatPlayer} message GS2ChatPlayer message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2ChatPlayer.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2ChatPlayer message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.GS2ChatPlayer} GS2ChatPlayer\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2ChatPlayer.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.GS2ChatPlayer();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    if (!(message.sPlayer && message.sPlayer.length))\r\n                        message.sPlayer = [];\r\n                    message.sPlayer.push(reader.string());\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2ChatPlayer message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.GS2ChatPlayer} GS2ChatPlayer\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2ChatPlayer.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2ChatPlayer message.\r\n         * @function verify\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2ChatPlayer.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (message.sPlayer != null && message.hasOwnProperty(\"sPlayer\")) {\r\n                if (!Array.isArray(message.sPlayer))\r\n                    return \"sPlayer: array expected\";\r\n                for (let i = 0; i < message.sPlayer.length; ++i)\r\n                    if (!$util.isString(message.sPlayer[i]))\r\n                        return \"sPlayer: string[] expected\";\r\n            }\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2ChatPlayer message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.GS2ChatPlayer} GS2ChatPlayer\r\n         */\r\n        GS2ChatPlayer.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.GS2ChatPlayer)\r\n                return object;\r\n            let message = new $root.friend.GS2ChatPlayer();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.sPlayer) {\r\n                if (!Array.isArray(object.sPlayer))\r\n                    throw TypeError(\".friend.GS2ChatPlayer.sPlayer: array expected\");\r\n                message.sPlayer = [];\r\n                for (let i = 0; i < object.sPlayer.length; ++i)\r\n                    message.sPlayer[i] = String(object.sPlayer[i]);\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2ChatPlayer message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @static\r\n         * @param {friend.GS2ChatPlayer} message GS2ChatPlayer\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2ChatPlayer.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.arrays || options.defaults)\r\n                object.sPlayer = [];\r\n            if (options.defaults)\r\n                object.pid = 0;\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.sPlayer && message.sPlayer.length) {\r\n                object.sPlayer = [];\r\n                for (let j = 0; j < message.sPlayer.length; ++j)\r\n                    object.sPlayer[j] = message.sPlayer[j];\r\n            }\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2ChatPlayer to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.GS2ChatPlayer\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2ChatPlayer.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2ChatPlayer;\r\n    })();\r\n\r\n    friend.C2GSNewFrdMsg = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSNewFrdMsg.\r\n         * @memberof friend\r\n         * @interface IC2GSNewFrdMsg\r\n         * @property {number} iTarget C2GSNewFrdMsg iTarget\r\n         * @property {string} sMsg C2GSNewFrdMsg sMsg\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSNewFrdMsg.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSNewFrdMsg.\r\n         * @implements IC2GSNewFrdMsg\r\n         * @constructor\r\n         * @param {friend.IC2GSNewFrdMsg=} [properties] Properties to set\r\n         */\r\n        function C2GSNewFrdMsg(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSNewFrdMsg iTarget.\r\n         * @member {number} iTarget\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @instance\r\n         */\r\n        C2GSNewFrdMsg.prototype.iTarget = 0;\r\n\r\n        /**\r\n         * C2GSNewFrdMsg sMsg.\r\n         * @member {string} sMsg\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @instance\r\n         */\r\n        C2GSNewFrdMsg.prototype.sMsg = \"\";\r\n\r\n        /**\r\n         * Creates a new C2GSNewFrdMsg instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSNewFrdMsg=} [properties] Properties to set\r\n         * @returns {friend.C2GSNewFrdMsg} C2GSNewFrdMsg instance\r\n         */\r\n        C2GSNewFrdMsg.create = function create(properties) {\r\n            return new C2GSNewFrdMsg(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSNewFrdMsg message. Does not implicitly {@link friend.C2GSNewFrdMsg.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSNewFrdMsg} message C2GSNewFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSNewFrdMsg.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.iTarget);\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sMsg);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSNewFrdMsg message, length delimited. Does not implicitly {@link friend.C2GSNewFrdMsg.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSNewFrdMsg} message C2GSNewFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSNewFrdMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSNewFrdMsg message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSNewFrdMsg} C2GSNewFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSNewFrdMsg.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSNewFrdMsg();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.iTarget = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.sMsg = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"iTarget\"))\r\n                throw $util.ProtocolError(\"missing required 'iTarget'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sMsg\"))\r\n                throw $util.ProtocolError(\"missing required 'sMsg'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSNewFrdMsg message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSNewFrdMsg} C2GSNewFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSNewFrdMsg.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSNewFrdMsg message.\r\n         * @function verify\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSNewFrdMsg.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.iTarget))\r\n                return \"iTarget: integer expected\";\r\n            if (!$util.isString(message.sMsg))\r\n                return \"sMsg: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSNewFrdMsg message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSNewFrdMsg} C2GSNewFrdMsg\r\n         */\r\n        C2GSNewFrdMsg.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSNewFrdMsg)\r\n                return object;\r\n            let message = new $root.friend.C2GSNewFrdMsg();\r\n            if (object.iTarget != null)\r\n                message.iTarget = object.iTarget | 0;\r\n            if (object.sMsg != null)\r\n                message.sMsg = String(object.sMsg);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSNewFrdMsg message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @static\r\n         * @param {friend.C2GSNewFrdMsg} message C2GSNewFrdMsg\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSNewFrdMsg.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.iTarget = 0;\r\n                object.sMsg = \"\";\r\n            }\r\n            if (message.iTarget != null && message.hasOwnProperty(\"iTarget\"))\r\n                object.iTarget = message.iTarget;\r\n            if (message.sMsg != null && message.hasOwnProperty(\"sMsg\"))\r\n                object.sMsg = message.sMsg;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSNewFrdMsg to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSNewFrdMsg\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSNewFrdMsg.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSNewFrdMsg;\r\n    })();\r\n\r\n    friend.C2GSReadFrdMsg = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSReadFrdMsg.\r\n         * @memberof friend\r\n         * @interface IC2GSReadFrdMsg\r\n         * @property {number} iSender C2GSReadFrdMsg iSender\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSReadFrdMsg.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSReadFrdMsg.\r\n         * @implements IC2GSReadFrdMsg\r\n         * @constructor\r\n         * @param {friend.IC2GSReadFrdMsg=} [properties] Properties to set\r\n         */\r\n        function C2GSReadFrdMsg(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSReadFrdMsg iSender.\r\n         * @member {number} iSender\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @instance\r\n         */\r\n        C2GSReadFrdMsg.prototype.iSender = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSReadFrdMsg instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReadFrdMsg=} [properties] Properties to set\r\n         * @returns {friend.C2GSReadFrdMsg} C2GSReadFrdMsg instance\r\n         */\r\n        C2GSReadFrdMsg.create = function create(properties) {\r\n            return new C2GSReadFrdMsg(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSReadFrdMsg message. Does not implicitly {@link friend.C2GSReadFrdMsg.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReadFrdMsg} message C2GSReadFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSReadFrdMsg.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.iSender);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSReadFrdMsg message, length delimited. Does not implicitly {@link friend.C2GSReadFrdMsg.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReadFrdMsg} message C2GSReadFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSReadFrdMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSReadFrdMsg message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSReadFrdMsg} C2GSReadFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSReadFrdMsg.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSReadFrdMsg();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.iSender = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"iSender\"))\r\n                throw $util.ProtocolError(\"missing required 'iSender'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSReadFrdMsg message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSReadFrdMsg} C2GSReadFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSReadFrdMsg.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSReadFrdMsg message.\r\n         * @function verify\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSReadFrdMsg.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.iSender))\r\n                return \"iSender: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSReadFrdMsg message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSReadFrdMsg} C2GSReadFrdMsg\r\n         */\r\n        C2GSReadFrdMsg.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSReadFrdMsg)\r\n                return object;\r\n            let message = new $root.friend.C2GSReadFrdMsg();\r\n            if (object.iSender != null)\r\n                message.iSender = object.iSender | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSReadFrdMsg message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @static\r\n         * @param {friend.C2GSReadFrdMsg} message C2GSReadFrdMsg\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSReadFrdMsg.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.iSender = 0;\r\n            if (message.iSender != null && message.hasOwnProperty(\"iSender\"))\r\n                object.iSender = message.iSender;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSReadFrdMsg to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSReadFrdMsg\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSReadFrdMsg.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSReadFrdMsg;\r\n    })();\r\n\r\n    friend.C2GSReplyFrdMsg = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSReplyFrdMsg.\r\n         * @memberof friend\r\n         * @interface IC2GSReplyFrdMsg\r\n         * @property {number} iSender C2GSReplyFrdMsg iSender\r\n         * @property {number} id C2GSReplyFrdMsg id\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSReplyFrdMsg.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSReplyFrdMsg.\r\n         * @implements IC2GSReplyFrdMsg\r\n         * @constructor\r\n         * @param {friend.IC2GSReplyFrdMsg=} [properties] Properties to set\r\n         */\r\n        function C2GSReplyFrdMsg(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSReplyFrdMsg iSender.\r\n         * @member {number} iSender\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @instance\r\n         */\r\n        C2GSReplyFrdMsg.prototype.iSender = 0;\r\n\r\n        /**\r\n         * C2GSReplyFrdMsg id.\r\n         * @member {number} id\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @instance\r\n         */\r\n        C2GSReplyFrdMsg.prototype.id = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSReplyFrdMsg instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReplyFrdMsg=} [properties] Properties to set\r\n         * @returns {friend.C2GSReplyFrdMsg} C2GSReplyFrdMsg instance\r\n         */\r\n        C2GSReplyFrdMsg.create = function create(properties) {\r\n            return new C2GSReplyFrdMsg(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSReplyFrdMsg message. Does not implicitly {@link friend.C2GSReplyFrdMsg.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReplyFrdMsg} message C2GSReplyFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSReplyFrdMsg.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.iSender);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.id);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSReplyFrdMsg message, length delimited. Does not implicitly {@link friend.C2GSReplyFrdMsg.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {friend.IC2GSReplyFrdMsg} message C2GSReplyFrdMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSReplyFrdMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSReplyFrdMsg message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSReplyFrdMsg} C2GSReplyFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSReplyFrdMsg.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSReplyFrdMsg();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.iSender = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.id = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"iSender\"))\r\n                throw $util.ProtocolError(\"missing required 'iSender'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"id\"))\r\n                throw $util.ProtocolError(\"missing required 'id'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSReplyFrdMsg message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSReplyFrdMsg} C2GSReplyFrdMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSReplyFrdMsg.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSReplyFrdMsg message.\r\n         * @function verify\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSReplyFrdMsg.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.iSender))\r\n                return \"iSender: integer expected\";\r\n            if (!$util.isInteger(message.id))\r\n                return \"id: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSReplyFrdMsg message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSReplyFrdMsg} C2GSReplyFrdMsg\r\n         */\r\n        C2GSReplyFrdMsg.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSReplyFrdMsg)\r\n                return object;\r\n            let message = new $root.friend.C2GSReplyFrdMsg();\r\n            if (object.iSender != null)\r\n                message.iSender = object.iSender | 0;\r\n            if (object.id != null)\r\n                message.id = object.id | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSReplyFrdMsg message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @static\r\n         * @param {friend.C2GSReplyFrdMsg} message C2GSReplyFrdMsg\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSReplyFrdMsg.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.iSender = 0;\r\n                object.id = 0;\r\n            }\r\n            if (message.iSender != null && message.hasOwnProperty(\"iSender\"))\r\n                object.iSender = message.iSender;\r\n            if (message.id != null && message.hasOwnProperty(\"id\"))\r\n                object.id = message.id;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSReplyFrdMsg to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSReplyFrdMsg\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSReplyFrdMsg.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSReplyFrdMsg;\r\n    })();\r\n\r\n    friend.C2GSGetFrdInfo = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSGetFrdInfo.\r\n         * @memberof friend\r\n         * @interface IC2GSGetFrdInfo\r\n         * @property {number} pid C2GSGetFrdInfo pid\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSGetFrdInfo.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSGetFrdInfo.\r\n         * @implements IC2GSGetFrdInfo\r\n         * @constructor\r\n         * @param {friend.IC2GSGetFrdInfo=} [properties] Properties to set\r\n         */\r\n        function C2GSGetFrdInfo(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSGetFrdInfo pid.\r\n         * @member {number} pid\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @instance\r\n         */\r\n        C2GSGetFrdInfo.prototype.pid = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSGetFrdInfo instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {friend.IC2GSGetFrdInfo=} [properties] Properties to set\r\n         * @returns {friend.C2GSGetFrdInfo} C2GSGetFrdInfo instance\r\n         */\r\n        C2GSGetFrdInfo.create = function create(properties) {\r\n            return new C2GSGetFrdInfo(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSGetFrdInfo message. Does not implicitly {@link friend.C2GSGetFrdInfo.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {friend.IC2GSGetFrdInfo} message C2GSGetFrdInfo message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSGetFrdInfo.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSGetFrdInfo message, length delimited. Does not implicitly {@link friend.C2GSGetFrdInfo.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {friend.IC2GSGetFrdInfo} message C2GSGetFrdInfo message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSGetFrdInfo.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSGetFrdInfo message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSGetFrdInfo} C2GSGetFrdInfo\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSGetFrdInfo.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSGetFrdInfo();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSGetFrdInfo message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSGetFrdInfo} C2GSGetFrdInfo\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSGetFrdInfo.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSGetFrdInfo message.\r\n         * @function verify\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSGetFrdInfo.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSGetFrdInfo message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSGetFrdInfo} C2GSGetFrdInfo\r\n         */\r\n        C2GSGetFrdInfo.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSGetFrdInfo)\r\n                return object;\r\n            let message = new $root.friend.C2GSGetFrdInfo();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSGetFrdInfo message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @static\r\n         * @param {friend.C2GSGetFrdInfo} message C2GSGetFrdInfo\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSGetFrdInfo.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.pid = 0;\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSGetFrdInfo to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSGetFrdInfo\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSGetFrdInfo.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSGetFrdInfo;\r\n    })();\r\n\r\n    friend.C2GSSearchFriend = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSSearchFriend.\r\n         * @memberof friend\r\n         * @interface IC2GSSearchFriend\r\n         * @property {string} sKey C2GSSearchFriend sKey\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSSearchFriend.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSSearchFriend.\r\n         * @implements IC2GSSearchFriend\r\n         * @constructor\r\n         * @param {friend.IC2GSSearchFriend=} [properties] Properties to set\r\n         */\r\n        function C2GSSearchFriend(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSSearchFriend sKey.\r\n         * @member {string} sKey\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @instance\r\n         */\r\n        C2GSSearchFriend.prototype.sKey = \"\";\r\n\r\n        /**\r\n         * Creates a new C2GSSearchFriend instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {friend.IC2GSSearchFriend=} [properties] Properties to set\r\n         * @returns {friend.C2GSSearchFriend} C2GSSearchFriend instance\r\n         */\r\n        C2GSSearchFriend.create = function create(properties) {\r\n            return new C2GSSearchFriend(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSSearchFriend message. Does not implicitly {@link friend.C2GSSearchFriend.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {friend.IC2GSSearchFriend} message C2GSSearchFriend message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSSearchFriend.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sKey);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSSearchFriend message, length delimited. Does not implicitly {@link friend.C2GSSearchFriend.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {friend.IC2GSSearchFriend} message C2GSSearchFriend message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSSearchFriend.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSSearchFriend message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSSearchFriend} C2GSSearchFriend\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSSearchFriend.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSSearchFriend();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.sKey = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"sKey\"))\r\n                throw $util.ProtocolError(\"missing required 'sKey'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSSearchFriend message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSSearchFriend} C2GSSearchFriend\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSSearchFriend.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSSearchFriend message.\r\n         * @function verify\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSSearchFriend.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isString(message.sKey))\r\n                return \"sKey: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSSearchFriend message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSSearchFriend} C2GSSearchFriend\r\n         */\r\n        C2GSSearchFriend.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSSearchFriend)\r\n                return object;\r\n            let message = new $root.friend.C2GSSearchFriend();\r\n            if (object.sKey != null)\r\n                message.sKey = String(object.sKey);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSSearchFriend message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @static\r\n         * @param {friend.C2GSSearchFriend} message C2GSSearchFriend\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSSearchFriend.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.sKey = \"\";\r\n            if (message.sKey != null && message.hasOwnProperty(\"sKey\"))\r\n                object.sKey = message.sKey;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSSearchFriend to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSSearchFriend\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSSearchFriend.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSSearchFriend;\r\n    })();\r\n\r\n    friend.C2GSGetHistoryMsg = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSGetHistoryMsg.\r\n         * @memberof friend\r\n         * @interface IC2GSGetHistoryMsg\r\n         * @property {number} pid C2GSGetHistoryMsg pid\r\n         * @property {number} curidx C2GSGetHistoryMsg curidx\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSGetHistoryMsg.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSGetHistoryMsg.\r\n         * @implements IC2GSGetHistoryMsg\r\n         * @constructor\r\n         * @param {friend.IC2GSGetHistoryMsg=} [properties] Properties to set\r\n         */\r\n        function C2GSGetHistoryMsg(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSGetHistoryMsg pid.\r\n         * @member {number} pid\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @instance\r\n         */\r\n        C2GSGetHistoryMsg.prototype.pid = 0;\r\n\r\n        /**\r\n         * C2GSGetHistoryMsg curidx.\r\n         * @member {number} curidx\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @instance\r\n         */\r\n        C2GSGetHistoryMsg.prototype.curidx = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSGetHistoryMsg instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {friend.IC2GSGetHistoryMsg=} [properties] Properties to set\r\n         * @returns {friend.C2GSGetHistoryMsg} C2GSGetHistoryMsg instance\r\n         */\r\n        C2GSGetHistoryMsg.create = function create(properties) {\r\n            return new C2GSGetHistoryMsg(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSGetHistoryMsg message. Does not implicitly {@link friend.C2GSGetHistoryMsg.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {friend.IC2GSGetHistoryMsg} message C2GSGetHistoryMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSGetHistoryMsg.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.curidx);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSGetHistoryMsg message, length delimited. Does not implicitly {@link friend.C2GSGetHistoryMsg.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {friend.IC2GSGetHistoryMsg} message C2GSGetHistoryMsg message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSGetHistoryMsg.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSGetHistoryMsg message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSGetHistoryMsg} C2GSGetHistoryMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSGetHistoryMsg.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSGetHistoryMsg();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.curidx = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"curidx\"))\r\n                throw $util.ProtocolError(\"missing required 'curidx'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSGetHistoryMsg message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSGetHistoryMsg} C2GSGetHistoryMsg\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSGetHistoryMsg.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSGetHistoryMsg message.\r\n         * @function verify\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSGetHistoryMsg.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (!$util.isInteger(message.curidx))\r\n                return \"curidx: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSGetHistoryMsg message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSGetHistoryMsg} C2GSGetHistoryMsg\r\n         */\r\n        C2GSGetHistoryMsg.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSGetHistoryMsg)\r\n                return object;\r\n            let message = new $root.friend.C2GSGetHistoryMsg();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.curidx != null)\r\n                message.curidx = object.curidx | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSGetHistoryMsg message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @static\r\n         * @param {friend.C2GSGetHistoryMsg} message C2GSGetHistoryMsg\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSGetHistoryMsg.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.curidx = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.curidx != null && message.hasOwnProperty(\"curidx\"))\r\n                object.curidx = message.curidx;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSGetHistoryMsg to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSGetHistoryMsg\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSGetHistoryMsg.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSGetHistoryMsg;\r\n    })();\r\n\r\n    friend.C2GSEnterChat = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSEnterChat.\r\n         * @memberof friend\r\n         * @interface IC2GSEnterChat\r\n         * @property {number} pid C2GSEnterChat pid\r\n         * @property {number} act C2GSEnterChat act\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSEnterChat.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSEnterChat.\r\n         * @implements IC2GSEnterChat\r\n         * @constructor\r\n         * @param {friend.IC2GSEnterChat=} [properties] Properties to set\r\n         */\r\n        function C2GSEnterChat(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSEnterChat pid.\r\n         * @member {number} pid\r\n         * @memberof friend.C2GSEnterChat\r\n         * @instance\r\n         */\r\n        C2GSEnterChat.prototype.pid = 0;\r\n\r\n        /**\r\n         * C2GSEnterChat act.\r\n         * @member {number} act\r\n         * @memberof friend.C2GSEnterChat\r\n         * @instance\r\n         */\r\n        C2GSEnterChat.prototype.act = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSEnterChat instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {friend.IC2GSEnterChat=} [properties] Properties to set\r\n         * @returns {friend.C2GSEnterChat} C2GSEnterChat instance\r\n         */\r\n        C2GSEnterChat.create = function create(properties) {\r\n            return new C2GSEnterChat(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSEnterChat message. Does not implicitly {@link friend.C2GSEnterChat.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {friend.IC2GSEnterChat} message C2GSEnterChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSEnterChat.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.act);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSEnterChat message, length delimited. Does not implicitly {@link friend.C2GSEnterChat.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {friend.IC2GSEnterChat} message C2GSEnterChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSEnterChat.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSEnterChat message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSEnterChat} C2GSEnterChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSEnterChat.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSEnterChat();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.act = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"act\"))\r\n                throw $util.ProtocolError(\"missing required 'act'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSEnterChat message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSEnterChat} C2GSEnterChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSEnterChat.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSEnterChat message.\r\n         * @function verify\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSEnterChat.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (!$util.isInteger(message.act))\r\n                return \"act: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSEnterChat message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSEnterChat} C2GSEnterChat\r\n         */\r\n        C2GSEnterChat.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSEnterChat)\r\n                return object;\r\n            let message = new $root.friend.C2GSEnterChat();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.act != null)\r\n                message.act = object.act | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSEnterChat message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSEnterChat\r\n         * @static\r\n         * @param {friend.C2GSEnterChat} message C2GSEnterChat\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSEnterChat.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.act = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.act != null && message.hasOwnProperty(\"act\"))\r\n                object.act = message.act;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSEnterChat to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSEnterChat\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSEnterChat.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSEnterChat;\r\n    })();\r\n\r\n    friend.C2GSMarkChat = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSMarkChat.\r\n         * @memberof friend\r\n         * @interface IC2GSMarkChat\r\n         * @property {number} pid C2GSMarkChat pid\r\n         * @property {number} act C2GSMarkChat act\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSMarkChat.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSMarkChat.\r\n         * @implements IC2GSMarkChat\r\n         * @constructor\r\n         * @param {friend.IC2GSMarkChat=} [properties] Properties to set\r\n         */\r\n        function C2GSMarkChat(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSMarkChat pid.\r\n         * @member {number} pid\r\n         * @memberof friend.C2GSMarkChat\r\n         * @instance\r\n         */\r\n        C2GSMarkChat.prototype.pid = 0;\r\n\r\n        /**\r\n         * C2GSMarkChat act.\r\n         * @member {number} act\r\n         * @memberof friend.C2GSMarkChat\r\n         * @instance\r\n         */\r\n        C2GSMarkChat.prototype.act = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSMarkChat instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {friend.IC2GSMarkChat=} [properties] Properties to set\r\n         * @returns {friend.C2GSMarkChat} C2GSMarkChat instance\r\n         */\r\n        C2GSMarkChat.create = function create(properties) {\r\n            return new C2GSMarkChat(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSMarkChat message. Does not implicitly {@link friend.C2GSMarkChat.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {friend.IC2GSMarkChat} message C2GSMarkChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSMarkChat.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.act);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSMarkChat message, length delimited. Does not implicitly {@link friend.C2GSMarkChat.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {friend.IC2GSMarkChat} message C2GSMarkChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSMarkChat.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSMarkChat message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSMarkChat} C2GSMarkChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSMarkChat.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSMarkChat();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.act = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"act\"))\r\n                throw $util.ProtocolError(\"missing required 'act'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSMarkChat message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSMarkChat} C2GSMarkChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSMarkChat.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSMarkChat message.\r\n         * @function verify\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSMarkChat.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (!$util.isInteger(message.act))\r\n                return \"act: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSMarkChat message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSMarkChat} C2GSMarkChat\r\n         */\r\n        C2GSMarkChat.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSMarkChat)\r\n                return object;\r\n            let message = new $root.friend.C2GSMarkChat();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.act != null)\r\n                message.act = object.act | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSMarkChat message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSMarkChat\r\n         * @static\r\n         * @param {friend.C2GSMarkChat} message C2GSMarkChat\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSMarkChat.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.act = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.act != null && message.hasOwnProperty(\"act\"))\r\n                object.act = message.act;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSMarkChat to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSMarkChat\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSMarkChat.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSMarkChat;\r\n    })();\r\n\r\n    friend.C2GSDelChat = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSDelChat.\r\n         * @memberof friend\r\n         * @interface IC2GSDelChat\r\n         * @property {number} pid C2GSDelChat pid\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSDelChat.\r\n         * @memberof friend\r\n         * @classdesc Represents a C2GSDelChat.\r\n         * @implements IC2GSDelChat\r\n         * @constructor\r\n         * @param {friend.IC2GSDelChat=} [properties] Properties to set\r\n         */\r\n        function C2GSDelChat(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSDelChat pid.\r\n         * @member {number} pid\r\n         * @memberof friend.C2GSDelChat\r\n         * @instance\r\n         */\r\n        C2GSDelChat.prototype.pid = 0;\r\n\r\n        /**\r\n         * Creates a new C2GSDelChat instance using the specified properties.\r\n         * @function create\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {friend.IC2GSDelChat=} [properties] Properties to set\r\n         * @returns {friend.C2GSDelChat} C2GSDelChat instance\r\n         */\r\n        C2GSDelChat.create = function create(properties) {\r\n            return new C2GSDelChat(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSDelChat message. Does not implicitly {@link friend.C2GSDelChat.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {friend.IC2GSDelChat} message C2GSDelChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSDelChat.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSDelChat message, length delimited. Does not implicitly {@link friend.C2GSDelChat.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {friend.IC2GSDelChat} message C2GSDelChat message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSDelChat.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSDelChat message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {friend.C2GSDelChat} C2GSDelChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSDelChat.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.friend.C2GSDelChat();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSDelChat message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {friend.C2GSDelChat} C2GSDelChat\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSDelChat.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSDelChat message.\r\n         * @function verify\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSDelChat.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSDelChat message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {friend.C2GSDelChat} C2GSDelChat\r\n         */\r\n        C2GSDelChat.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.friend.C2GSDelChat)\r\n                return object;\r\n            let message = new $root.friend.C2GSDelChat();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSDelChat message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof friend.C2GSDelChat\r\n         * @static\r\n         * @param {friend.C2GSDelChat} message C2GSDelChat\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSDelChat.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.pid = 0;\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSDelChat to JSON.\r\n         * @function toJSON\r\n         * @memberof friend.C2GSDelChat\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSDelChat.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSDelChat;\r\n    })();\r\n\r\n    return friend;\r\n})();\r\n\r\nexport const login = $root.login = (() => {\r\n\r\n    /**\r\n     * Namespace login.\r\n     * @exports login\r\n     * @namespace\r\n     */\r\n    const login = {};\r\n\r\n    login.GS2CLoginCode = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CLoginCode.\r\n         * @memberof login\r\n         * @interface IGS2CLoginCode\r\n         * @property {login.GS2CLoginCode.Code} eLogincode GS2CLoginCode eLogincode\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CLoginCode.\r\n         * @memberof login\r\n         * @classdesc Represents a GS2CLoginCode.\r\n         * @implements IGS2CLoginCode\r\n         * @constructor\r\n         * @param {login.IGS2CLoginCode=} [properties] Properties to set\r\n         */\r\n        function GS2CLoginCode(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CLoginCode eLogincode.\r\n         * @member {login.GS2CLoginCode.Code} eLogincode\r\n         * @memberof login.GS2CLoginCode\r\n         * @instance\r\n         */\r\n        GS2CLoginCode.prototype.eLogincode = 0;\r\n\r\n        /**\r\n         * Creates a new GS2CLoginCode instance using the specified properties.\r\n         * @function create\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {login.IGS2CLoginCode=} [properties] Properties to set\r\n         * @returns {login.GS2CLoginCode} GS2CLoginCode instance\r\n         */\r\n        GS2CLoginCode.create = function create(properties) {\r\n            return new GS2CLoginCode(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CLoginCode message. Does not implicitly {@link login.GS2CLoginCode.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {login.IGS2CLoginCode} message GS2CLoginCode message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CLoginCode.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eLogincode);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CLoginCode message, length delimited. Does not implicitly {@link login.GS2CLoginCode.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {login.IGS2CLoginCode} message GS2CLoginCode message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CLoginCode.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CLoginCode message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {login.GS2CLoginCode} GS2CLoginCode\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CLoginCode.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.login.GS2CLoginCode();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.eLogincode = reader.int32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"eLogincode\"))\r\n                throw $util.ProtocolError(\"missing required 'eLogincode'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CLoginCode message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {login.GS2CLoginCode} GS2CLoginCode\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CLoginCode.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CLoginCode message.\r\n         * @function verify\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CLoginCode.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            switch (message.eLogincode) {\r\n            default:\r\n                return \"eLogincode: enum value expected\";\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n                break;\r\n            }\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CLoginCode message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {login.GS2CLoginCode} GS2CLoginCode\r\n         */\r\n        GS2CLoginCode.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.login.GS2CLoginCode)\r\n                return object;\r\n            let message = new $root.login.GS2CLoginCode();\r\n            switch (object.eLogincode) {\r\n            case \"SUCCEED\":\r\n            case 0:\r\n                message.eLogincode = 0;\r\n                break;\r\n            case \"NOACCOUNT\":\r\n            case 1:\r\n                message.eLogincode = 1;\r\n                break;\r\n            case \"NETERR\":\r\n            case 2:\r\n                message.eLogincode = 2;\r\n                break;\r\n            case \"TOKENERR\":\r\n            case 3:\r\n                message.eLogincode = 3;\r\n                break;\r\n            case \"LOGINERR\":\r\n            case 4:\r\n                message.eLogincode = 4;\r\n                break;\r\n            case \"GAMEFLAGERR\":\r\n            case 5:\r\n                message.eLogincode = 5;\r\n                break;\r\n            case \"AUTHERR\":\r\n            case 6:\r\n                message.eLogincode = 6;\r\n                break;\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CLoginCode message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof login.GS2CLoginCode\r\n         * @static\r\n         * @param {login.GS2CLoginCode} message GS2CLoginCode\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CLoginCode.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults)\r\n                object.eLogincode = options.enums === String ? \"SUCCEED\" : 0;\r\n            if (message.eLogincode != null && message.hasOwnProperty(\"eLogincode\"))\r\n                object.eLogincode = options.enums === String ? $root.login.GS2CLoginCode.Code[message.eLogincode] : message.eLogincode;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CLoginCode to JSON.\r\n         * @function toJSON\r\n         * @memberof login.GS2CLoginCode\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CLoginCode.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        /**\r\n         * Code enum.\r\n         * @name login.GS2CLoginCode.Code\r\n         * @enum {string}\r\n         * @property {number} SUCCEED=0 SUCCEED value\r\n         * @property {number} NOACCOUNT=1 NOACCOUNT value\r\n         * @property {number} NETERR=2 NETERR value\r\n         * @property {number} TOKENERR=3 TOKENERR value\r\n         * @property {number} LOGINERR=4 LOGINERR value\r\n         * @property {number} GAMEFLAGERR=5 GAMEFLAGERR value\r\n         * @property {number} AUTHERR=6 AUTHERR value\r\n         */\r\n        GS2CLoginCode.Code = (function() {\r\n            const valuesById = {}, values = Object.create(valuesById);\r\n            values[valuesById[0] = \"SUCCEED\"] = 0;\r\n            values[valuesById[1] = \"NOACCOUNT\"] = 1;\r\n            values[valuesById[2] = \"NETERR\"] = 2;\r\n            values[valuesById[3] = \"TOKENERR\"] = 3;\r\n            values[valuesById[4] = \"LOGINERR\"] = 4;\r\n            values[valuesById[5] = \"GAMEFLAGERR\"] = 5;\r\n            values[valuesById[6] = \"AUTHERR\"] = 6;\r\n            return values;\r\n        })();\r\n\r\n        return GS2CLoginCode;\r\n    })();\r\n\r\n    login.GS2CLoginSucc = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2CLoginSucc.\r\n         * @memberof login\r\n         * @interface IGS2CLoginSucc\r\n         * @property {number} pid GS2CLoginSucc pid\r\n         * @property {string} sName GS2CLoginSucc sName\r\n         * @property {string} sGameFlag GS2CLoginSucc sGameFlag\r\n         * @property {Array.<string>|null} [gamelist] GS2CLoginSucc gamelist\r\n         * @property {number} iFlag GS2CLoginSucc iFlag\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2CLoginSucc.\r\n         * @memberof login\r\n         * @classdesc Represents a GS2CLoginSucc.\r\n         * @implements IGS2CLoginSucc\r\n         * @constructor\r\n         * @param {login.IGS2CLoginSucc=} [properties] Properties to set\r\n         */\r\n        function GS2CLoginSucc(properties) {\r\n            this.gamelist = [];\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2CLoginSucc pid.\r\n         * @member {number} pid\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         */\r\n        GS2CLoginSucc.prototype.pid = 0;\r\n\r\n        /**\r\n         * GS2CLoginSucc sName.\r\n         * @member {string} sName\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         */\r\n        GS2CLoginSucc.prototype.sName = \"\";\r\n\r\n        /**\r\n         * GS2CLoginSucc sGameFlag.\r\n         * @member {string} sGameFlag\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         */\r\n        GS2CLoginSucc.prototype.sGameFlag = \"\";\r\n\r\n        /**\r\n         * GS2CLoginSucc gamelist.\r\n         * @member {Array.<string>} gamelist\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         */\r\n        GS2CLoginSucc.prototype.gamelist = $util.emptyArray;\r\n\r\n        /**\r\n         * GS2CLoginSucc iFlag.\r\n         * @member {number} iFlag\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         */\r\n        GS2CLoginSucc.prototype.iFlag = 0;\r\n\r\n        /**\r\n         * Creates a new GS2CLoginSucc instance using the specified properties.\r\n         * @function create\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {login.IGS2CLoginSucc=} [properties] Properties to set\r\n         * @returns {login.GS2CLoginSucc} GS2CLoginSucc instance\r\n         */\r\n        GS2CLoginSucc.create = function create(properties) {\r\n            return new GS2CLoginSucc(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CLoginSucc message. Does not implicitly {@link login.GS2CLoginSucc.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {login.IGS2CLoginSucc} message GS2CLoginSucc message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CLoginSucc.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.pid);\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sName);\r\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sGameFlag);\r\n            if (message.gamelist != null && message.gamelist.length)\r\n                for (let i = 0; i < message.gamelist.length; ++i)\r\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.gamelist[i]);\r\n            writer.uint32(/* id 5, wireType 0 =*/40).sint32(message.iFlag);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2CLoginSucc message, length delimited. Does not implicitly {@link login.GS2CLoginSucc.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {login.IGS2CLoginSucc} message GS2CLoginSucc message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2CLoginSucc.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CLoginSucc message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {login.GS2CLoginSucc} GS2CLoginSucc\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CLoginSucc.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.login.GS2CLoginSucc();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.pid = reader.sint32();\r\n                    break;\r\n                case 2:\r\n                    message.sName = reader.string();\r\n                    break;\r\n                case 3:\r\n                    message.sGameFlag = reader.string();\r\n                    break;\r\n                case 4:\r\n                    if (!(message.gamelist && message.gamelist.length))\r\n                        message.gamelist = [];\r\n                    message.gamelist.push(reader.string());\r\n                    break;\r\n                case 5:\r\n                    message.iFlag = reader.sint32();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"pid\"))\r\n                throw $util.ProtocolError(\"missing required 'pid'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sName\"))\r\n                throw $util.ProtocolError(\"missing required 'sName'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sGameFlag\"))\r\n                throw $util.ProtocolError(\"missing required 'sGameFlag'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iFlag\"))\r\n                throw $util.ProtocolError(\"missing required 'iFlag'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2CLoginSucc message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {login.GS2CLoginSucc} GS2CLoginSucc\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2CLoginSucc.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2CLoginSucc message.\r\n         * @function verify\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2CLoginSucc.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isInteger(message.pid))\r\n                return \"pid: integer expected\";\r\n            if (!$util.isString(message.sName))\r\n                return \"sName: string expected\";\r\n            if (!$util.isString(message.sGameFlag))\r\n                return \"sGameFlag: string expected\";\r\n            if (message.gamelist != null && message.hasOwnProperty(\"gamelist\")) {\r\n                if (!Array.isArray(message.gamelist))\r\n                    return \"gamelist: array expected\";\r\n                for (let i = 0; i < message.gamelist.length; ++i)\r\n                    if (!$util.isString(message.gamelist[i]))\r\n                        return \"gamelist: string[] expected\";\r\n            }\r\n            if (!$util.isInteger(message.iFlag))\r\n                return \"iFlag: integer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2CLoginSucc message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {login.GS2CLoginSucc} GS2CLoginSucc\r\n         */\r\n        GS2CLoginSucc.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.login.GS2CLoginSucc)\r\n                return object;\r\n            let message = new $root.login.GS2CLoginSucc();\r\n            if (object.pid != null)\r\n                message.pid = object.pid | 0;\r\n            if (object.sName != null)\r\n                message.sName = String(object.sName);\r\n            if (object.sGameFlag != null)\r\n                message.sGameFlag = String(object.sGameFlag);\r\n            if (object.gamelist) {\r\n                if (!Array.isArray(object.gamelist))\r\n                    throw TypeError(\".login.GS2CLoginSucc.gamelist: array expected\");\r\n                message.gamelist = [];\r\n                for (let i = 0; i < object.gamelist.length; ++i)\r\n                    message.gamelist[i] = String(object.gamelist[i]);\r\n            }\r\n            if (object.iFlag != null)\r\n                message.iFlag = object.iFlag | 0;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2CLoginSucc message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof login.GS2CLoginSucc\r\n         * @static\r\n         * @param {login.GS2CLoginSucc} message GS2CLoginSucc\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2CLoginSucc.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.arrays || options.defaults)\r\n                object.gamelist = [];\r\n            if (options.defaults) {\r\n                object.pid = 0;\r\n                object.sName = \"\";\r\n                object.sGameFlag = \"\";\r\n                object.iFlag = 0;\r\n            }\r\n            if (message.pid != null && message.hasOwnProperty(\"pid\"))\r\n                object.pid = message.pid;\r\n            if (message.sName != null && message.hasOwnProperty(\"sName\"))\r\n                object.sName = message.sName;\r\n            if (message.sGameFlag != null && message.hasOwnProperty(\"sGameFlag\"))\r\n                object.sGameFlag = message.sGameFlag;\r\n            if (message.gamelist && message.gamelist.length) {\r\n                object.gamelist = [];\r\n                for (let j = 0; j < message.gamelist.length; ++j)\r\n                    object.gamelist[j] = message.gamelist[j];\r\n            }\r\n            if (message.iFlag != null && message.hasOwnProperty(\"iFlag\"))\r\n                object.iFlag = message.iFlag;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2CLoginSucc to JSON.\r\n         * @function toJSON\r\n         * @memberof login.GS2CLoginSucc\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2CLoginSucc.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2CLoginSucc;\r\n    })();\r\n\r\n    login.C2GSVertify = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GSVertify.\r\n         * @memberof login\r\n         * @interface IC2GSVertify\r\n         * @property {string} sToken C2GSVertify sToken\r\n         * @property {string} sGameFlag C2GSVertify sGameFlag\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GSVertify.\r\n         * @memberof login\r\n         * @classdesc Represents a C2GSVertify.\r\n         * @implements IC2GSVertify\r\n         * @constructor\r\n         * @param {login.IC2GSVertify=} [properties] Properties to set\r\n         */\r\n        function C2GSVertify(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GSVertify sToken.\r\n         * @member {string} sToken\r\n         * @memberof login.C2GSVertify\r\n         * @instance\r\n         */\r\n        C2GSVertify.prototype.sToken = \"\";\r\n\r\n        /**\r\n         * C2GSVertify sGameFlag.\r\n         * @member {string} sGameFlag\r\n         * @memberof login.C2GSVertify\r\n         * @instance\r\n         */\r\n        C2GSVertify.prototype.sGameFlag = \"\";\r\n\r\n        /**\r\n         * Creates a new C2GSVertify instance using the specified properties.\r\n         * @function create\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {login.IC2GSVertify=} [properties] Properties to set\r\n         * @returns {login.C2GSVertify} C2GSVertify instance\r\n         */\r\n        C2GSVertify.create = function create(properties) {\r\n            return new C2GSVertify(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSVertify message. Does not implicitly {@link login.C2GSVertify.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {login.IC2GSVertify} message C2GSVertify message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSVertify.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sToken);\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sGameFlag);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GSVertify message, length delimited. Does not implicitly {@link login.C2GSVertify.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {login.IC2GSVertify} message C2GSVertify message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GSVertify.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSVertify message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {login.C2GSVertify} C2GSVertify\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSVertify.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.login.C2GSVertify();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.sToken = reader.string();\r\n                    break;\r\n                case 2:\r\n                    message.sGameFlag = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"sToken\"))\r\n                throw $util.ProtocolError(\"missing required 'sToken'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"sGameFlag\"))\r\n                throw $util.ProtocolError(\"missing required 'sGameFlag'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GSVertify message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {login.C2GSVertify} C2GSVertify\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GSVertify.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GSVertify message.\r\n         * @function verify\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GSVertify.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (!$util.isString(message.sToken))\r\n                return \"sToken: string expected\";\r\n            if (!$util.isString(message.sGameFlag))\r\n                return \"sGameFlag: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GSVertify message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {login.C2GSVertify} C2GSVertify\r\n         */\r\n        C2GSVertify.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.login.C2GSVertify)\r\n                return object;\r\n            let message = new $root.login.C2GSVertify();\r\n            if (object.sToken != null)\r\n                message.sToken = String(object.sToken);\r\n            if (object.sGameFlag != null)\r\n                message.sGameFlag = String(object.sGameFlag);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GSVertify message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof login.C2GSVertify\r\n         * @static\r\n         * @param {login.C2GSVertify} message C2GSVertify\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GSVertify.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.sToken = \"\";\r\n                object.sGameFlag = \"\";\r\n            }\r\n            if (message.sToken != null && message.hasOwnProperty(\"sToken\"))\r\n                object.sToken = message.sToken;\r\n            if (message.sGameFlag != null && message.hasOwnProperty(\"sGameFlag\"))\r\n                object.sGameFlag = message.sGameFlag;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GSVertify to JSON.\r\n         * @function toJSON\r\n         * @memberof login.C2GSVertify\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GSVertify.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GSVertify;\r\n    })();\r\n\r\n    return login;\r\n})();\r\n\r\nexport const netcommand = $root.netcommand = (() => {\r\n\r\n    /**\r\n     * Namespace netcommand.\r\n     * @exports netcommand\r\n     * @namespace\r\n     */\r\n    const netcommand = {};\r\n\r\n    /**\r\n     * PROTOFILE enum.\r\n     * @name netcommand.PROTOFILE\r\n     * @enum {string}\r\n     * @property {number} login=1 login value\r\n     * @property {number} friend=2 friend value\r\n     */\r\n    netcommand.PROTOFILE = (function() {\r\n        const valuesById = {}, values = Object.create(valuesById);\r\n        values[valuesById[1] = \"login\"] = 1;\r\n        values[valuesById[2] = \"friend\"] = 2;\r\n        return values;\r\n    })();\r\n\r\n    netcommand.NetCommand = (function() {\r\n\r\n        /**\r\n         * Properties of a NetCommand.\r\n         * @memberof netcommand\r\n         * @interface INetCommand\r\n         * @property {netcommand.PROTOFILE} eProtofile NetCommand eProtofile\r\n         * @property {number} iCmd NetCommand iCmd\r\n         * @property {Uint8Array|null} [sEncodepkg] NetCommand sEncodepkg\r\n         */\r\n\r\n        /**\r\n         * Constructs a new NetCommand.\r\n         * @memberof netcommand\r\n         * @classdesc Represents a NetCommand.\r\n         * @implements INetCommand\r\n         * @constructor\r\n         * @param {netcommand.INetCommand=} [properties] Properties to set\r\n         */\r\n        function NetCommand(properties) {\r\n            if (properties)\r\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * NetCommand eProtofile.\r\n         * @member {netcommand.PROTOFILE} eProtofile\r\n         * @memberof netcommand.NetCommand\r\n         * @instance\r\n         */\r\n        NetCommand.prototype.eProtofile = 1;\r\n\r\n        /**\r\n         * NetCommand iCmd.\r\n         * @member {number} iCmd\r\n         * @memberof netcommand.NetCommand\r\n         * @instance\r\n         */\r\n        NetCommand.prototype.iCmd = 0;\r\n\r\n        /**\r\n         * NetCommand sEncodepkg.\r\n         * @member {Uint8Array} sEncodepkg\r\n         * @memberof netcommand.NetCommand\r\n         * @instance\r\n         */\r\n        NetCommand.prototype.sEncodepkg = $util.newBuffer([]);\r\n\r\n        /**\r\n         * Creates a new NetCommand instance using the specified properties.\r\n         * @function create\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {netcommand.INetCommand=} [properties] Properties to set\r\n         * @returns {netcommand.NetCommand} NetCommand instance\r\n         */\r\n        NetCommand.create = function create(properties) {\r\n            return new NetCommand(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified NetCommand message. Does not implicitly {@link netcommand.NetCommand.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {netcommand.INetCommand} message NetCommand message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        NetCommand.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eProtofile);\r\n            writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.iCmd);\r\n            if (message.sEncodepkg != null && message.hasOwnProperty(\"sEncodepkg\"))\r\n                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.sEncodepkg);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified NetCommand message, length delimited. Does not implicitly {@link netcommand.NetCommand.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {netcommand.INetCommand} message NetCommand message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        NetCommand.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a NetCommand message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {netcommand.NetCommand} NetCommand\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        NetCommand.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.netcommand.NetCommand();\r\n            while (reader.pos < end) {\r\n                let tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.eProtofile = reader.int32();\r\n                    break;\r\n                case 2:\r\n                    message.iCmd = reader.sint32();\r\n                    break;\r\n                case 3:\r\n                    message.sEncodepkg = reader.bytes();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            if (!message.hasOwnProperty(\"eProtofile\"))\r\n                throw $util.ProtocolError(\"missing required 'eProtofile'\", { instance: message });\r\n            if (!message.hasOwnProperty(\"iCmd\"))\r\n                throw $util.ProtocolError(\"missing required 'iCmd'\", { instance: message });\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a NetCommand message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {netcommand.NetCommand} NetCommand\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        NetCommand.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a NetCommand message.\r\n         * @function verify\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        NetCommand.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            switch (message.eProtofile) {\r\n            default:\r\n                return \"eProtofile: enum value expected\";\r\n            case 1:\r\n            case 2:\r\n                break;\r\n            }\r\n            if (!$util.isInteger(message.iCmd))\r\n                return \"iCmd: integer expected\";\r\n            if (message.sEncodepkg != null && message.hasOwnProperty(\"sEncodepkg\"))\r\n                if (!(message.sEncodepkg && typeof message.sEncodepkg.length === \"number\" || $util.isString(message.sEncodepkg)))\r\n                    return \"sEncodepkg: buffer expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a NetCommand message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {netcommand.NetCommand} NetCommand\r\n         */\r\n        NetCommand.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.netcommand.NetCommand)\r\n                return object;\r\n            let message = new $root.netcommand.NetCommand();\r\n            switch (object.eProtofile) {\r\n            case \"login\":\r\n            case 1:\r\n                message.eProtofile = 1;\r\n                break;\r\n            case \"friend\":\r\n            case 2:\r\n                message.eProtofile = 2;\r\n                break;\r\n            }\r\n            if (object.iCmd != null)\r\n                message.iCmd = object.iCmd | 0;\r\n            if (object.sEncodepkg != null)\r\n                if (typeof object.sEncodepkg === \"string\")\r\n                    $util.base64.decode(object.sEncodepkg, message.sEncodepkg = $util.newBuffer($util.base64.length(object.sEncodepkg)), 0);\r\n                else if (object.sEncodepkg.length)\r\n                    message.sEncodepkg = object.sEncodepkg;\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a NetCommand message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof netcommand.NetCommand\r\n         * @static\r\n         * @param {netcommand.NetCommand} message NetCommand\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        NetCommand.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            let object = {};\r\n            if (options.defaults) {\r\n                object.eProtofile = options.enums === String ? \"login\" : 1;\r\n                object.iCmd = 0;\r\n                if (options.bytes === String)\r\n                    object.sEncodepkg = \"\";\r\n                else {\r\n                    object.sEncodepkg = [];\r\n                    if (options.bytes !== Array)\r\n                        object.sEncodepkg = $util.newBuffer(object.sEncodepkg);\r\n                }\r\n            }\r\n            if (message.eProtofile != null && message.hasOwnProperty(\"eProtofile\"))\r\n                object.eProtofile = options.enums === String ? $root.netcommand.PROTOFILE[message.eProtofile] : message.eProtofile;\r\n            if (message.iCmd != null && message.hasOwnProperty(\"iCmd\"))\r\n                object.iCmd = message.iCmd;\r\n            if (message.sEncodepkg != null && message.hasOwnProperty(\"sEncodepkg\"))\r\n                object.sEncodepkg = options.bytes === String ? $util.base64.encode(message.sEncodepkg, 0, message.sEncodepkg.length) : options.bytes === Array ? Array.prototype.slice.call(message.sEncodepkg) : message.sEncodepkg;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this NetCommand to JSON.\r\n         * @function toJSON\r\n         * @memberof netcommand.NetCommand\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        NetCommand.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return NetCommand;\r\n    })();\r\n\r\n    return netcommand;\r\n})();\r\n\r\nexport { $root as default };\r\n","import Vue from 'vue';\r\nimport * as net from './net';\r\nimport { netcommand, login } from '@/proto';\r\n\r\nconst C2SCommand: { [key: number]: string } = {\r\n  1: 'C2GSVertify',\r\n};\r\n\r\nfunction Send(iCmd: number, t: Object) {\r\n  const subName = C2SCommand[iCmd];\r\n  net.EncodeAndSend(netcommand.PROTOFILE.login, iCmd, subName, t);\r\n}\r\n\r\nfunction GS2CLoginSucc(message: login.IGS2CLoginSucc) {\r\n  console.log(message);\r\n  Vue.prototype.$store.dispatch('profile/loginSucc', message);\r\n}\r\n\r\nfunction GS2CLoginCode(message: login.IGS2CLoginCode) {\r\n  console.log(message);\r\n  const CODE = login.GS2CLoginCode.Code;\r\n  switch (message.eLogincode) {\r\n    case CODE.SUCCEED: {\r\n      Vue.prototype.$message({\r\n        message: '登录成功',\r\n        type: 'success',\r\n      });\r\n      break;\r\n    }\r\n    case CODE.NETERR: {\r\n      Vue.prototype.$confirm('网络异常，请稍后重试', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).then(() => {\r\n        // console.log('去重新登录');\r\n      }).catch(() => {\r\n        // console.log('算了');\r\n      });\r\n      break;\r\n    }\r\n    case CODE.NOACCOUNT: {\r\n      Vue.prototype.$confirm('账号不存在', '提示', {\r\n        confirmButtonText: '确定',\r\n        type: 'warning',\r\n      });\r\n      break;\r\n    }\r\n    case CODE.TOKENERR: {\r\n      Vue.prototype.$confirm('TOKEN验证失败', '提示', {\r\n        confirmButtonText: '确定',\r\n        type: 'warning',\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      // donothing\r\n    }\r\n  }\r\n}\r\n\r\nconst S2CCommand: { [key: number]: [string, Function] } = {\r\n  1: ['GS2CLoginCode', GS2CLoginCode],\r\n  2: ['GS2CLoginSucc', GS2CLoginSucc],\r\n};\r\n\r\nexport function DecodeAndDispatch(iCmd: number, sEncodePkg: any) {\r\n  const info = S2CCommand[iCmd];\r\n  if (info) {\r\n    const message = (login as any)[info[0]].decode(sEncodePkg);\r\n    info[1](message);\r\n  } else {\r\n    console.log('cmd not found', iCmd);\r\n  }\r\n}\r\n\r\nexport function C2GSVertify(pbmsg: login.IC2GSVertify) {\r\n  Send(1, pbmsg);\r\n}\r\n","import * as proto from '@/proto/index';\r\nimport * as netfriend from '@/net/netfriend';\r\nimport * as netlogin from '@/net/netlogin';\r\n\r\nexport const eProtofile2Module = {\r\n  [proto.netcommand.PROTOFILE.login]: netlogin,\r\n  [proto.netcommand.PROTOFILE.friend]: netfriend,\r\n};\r\n\r\nexport default { eProtofile2Module };\r\n","import Vue from 'vue';\r\nimport * as proto from '@/proto/index';\r\nimport { eProtofile2Module } from './netdefine';\r\n\r\nexport function DecodeAndDispatch(mainPkg: any) {\r\n  const mainMessage = proto.netcommand.NetCommand.decode(mainPkg);\r\n  if (!mainMessage) {\r\n    return;\r\n  }\r\n  const module = eProtofile2Module[mainMessage.eProtofile] as { DecodeAndDispatch: Function };\r\n  // console.log('DecodeAndDispatch->', mainMessage);\r\n  module.DecodeAndDispatch(mainMessage.iCmd, mainMessage.sEncodepkg);\r\n  // console.log('DecodeAndDispatch->done');\r\n}\r\n\r\nfunction Send(sEncodepkg: any) {\r\n  // console.log('Send->', sEncodepkg);\r\n  Vue.prototype.$socket.send(sEncodepkg);\r\n}\r\n\r\nexport function EncodeAndSend(eProtofile: proto.netcommand.PROTOFILE,\r\n  iCmd: number, sSubname: string, t: Object) {\r\n  const sProtofile = proto.netcommand.PROTOFILE[eProtofile];\r\n  console.log(eProtofile, iCmd, sSubname, t);\r\n  const subCommand = (proto as any)[sProtofile][sSubname];\r\n  if (!subCommand) {\r\n    console.log(sSubname, 'not found');\r\n    return;\r\n  }\r\n  const subMessage = subCommand.create(t);\r\n  const subPkg = subCommand.encode(subMessage).finish();\r\n  const mainMessage = proto.netcommand.NetCommand.create({\r\n    eProtofile,\r\n    iCmd,\r\n    sEncodepkg: subPkg,\r\n  });\r\n  const mainPkg = proto.netcommand.NetCommand.encode(mainMessage).finish();\r\n  Send(mainPkg);\r\n}\r\n","import Vue from 'vue';\r\nimport * as net from './net';\r\nimport { netcommand, friend } from '@/proto';\r\nimport { UserState } from '@/store/modules/user/types';\r\nimport { SessionState } from '@/store/modules/session/types';\r\n\r\nfunction GS2CNewMsgCnt(message: friend.IGS2CNewMsgCnt) {\r\n  console.log(message);\r\n  const { iSender } = message;\r\n  const store = Vue.prototype.$store;\r\n  store.dispatch('user/updateNewMsgCnt', message);\r\n  const userState: UserState = store.state.user;\r\n  if (!userState.users[iSender]) {\r\n    C2GSGetFrdInfo({ pid: iSender });\r\n  }\r\n  const sessionState: SessionState = store.state.session;\r\n  if (sessionState.currentSessionId === iSender) {\r\n    C2GSReadFrdMsg({ iSender });\r\n  }\r\n}\r\n\r\nfunction GS2CSendFrdMsg(message: friend.IGS2CSendFrdMsg) {\r\n  console.log(message);\r\n  Vue.prototype.$store.dispatch('session/receiveMessage', message);\r\n  Vue.prototype.$store.dispatch('user/updateNewMsgCnt', { iSender: message.pid, iCnt: 0 });\r\n  if (message.iFlag === 0 && message.tFrdMsg && message.tFrdMsg.length > 0) {\r\n    const msg = message.tFrdMsg![message.tFrdMsg!.length - 1];\r\n    Vue.prototype.$store.dispatch('user/updateChatTime', { iSender: message.pid, iTime: msg.iTime });\r\n  }\r\n  message.tFrdMsg!.forEach((frdMsg) => {\r\n    C2GSReplyFrdMsg({ iSender: message.pid, id: frdMsg.id });\r\n  });\r\n}\r\n\r\nfunction GS2CSendFrdInfo(message: friend.IGS2CSendFrdInfo) {\r\n  console.log(message);\r\n  Vue.prototype.$store.dispatch('user/addUser', message);\r\n}\r\n\r\nfunction GS2CSearchResult(message: friend.IGS2CSearchResult) {\r\n  console.log(message);\r\n  Vue.prototype.$store.dispatch('user/updateSearchResult', message.tRet);\r\n}\r\n\r\nfunction GS2CNotify(message: friend.IGS2CNotify) {\r\n  console.log(message);\r\n  Vue.prototype.$message({\r\n    message: message.sText,\r\n  });\r\n}\r\n\r\nfunction GS2ChatPlayer(message: friend.IGS2ChatPlayer) {\r\n  console.log(message);\r\n  const store = Vue.prototype.$store;\r\n  store.dispatch('user/updateChatGM', message);\r\n}\r\n\r\nconst S2CCommand: { [key: number]: [string, Function] } = {\r\n  1: ['GS2CNewMsgCnt', GS2CNewMsgCnt],\r\n  2: ['GS2CSendFrdMsg', GS2CSendFrdMsg],\r\n  3: ['GS2CSendFrdInfo', GS2CSendFrdInfo],\r\n  4: ['GS2CSearchResult', GS2CSearchResult],\r\n  5: ['GS2CNotify', GS2CNotify],\r\n  6: ['GS2ChatPlayer', GS2ChatPlayer],\r\n};\r\n\r\nexport function DecodeAndDispatch(iCmd: number, sEncodePkg: any) {\r\n  const info = S2CCommand[iCmd];\r\n  if (info) {\r\n    const message = (friend as any)[info[0]].decode(sEncodePkg);\r\n    info[1](message);\r\n  } else {\r\n    console.log('cmd not found', iCmd);\r\n  }\r\n}\r\n\r\nconst C2SCommand: { [key: number]: string } = {\r\n  1: 'C2GSNewFrdMsg',\r\n  2: 'C2GSReadFrdMsg',\r\n  3: 'C2GSReplyFrdMsg',\r\n  4: 'C2GSGetFrdInfo',\r\n  5: 'C2GSSearchFriend',\r\n  6: 'C2GSGetHistoryMsg',\r\n  7: 'C2GSEnterChat',\r\n  8: 'C2GSMarkChat',\r\n  9: 'C2GSDelChat',\r\n};\r\n\r\nfunction Send(iCmd: number, t: Object) {\r\n  const subName = C2SCommand[iCmd];\r\n  net.EncodeAndSend(netcommand.PROTOFILE.friend, iCmd, subName, t);\r\n}\r\n\r\nexport function C2GSNewFrdMsg(pbmsg: friend.IC2GSNewFrdMsg) {\r\n  Send(1, pbmsg);\r\n}\r\n\r\nexport function C2GSReadFrdMsg(pbmsg: friend.IC2GSReadFrdMsg) {\r\n  Send(2, pbmsg);\r\n}\r\n\r\nexport function C2GSReplyFrdMsg(pbmsg: friend.IC2GSReplyFrdMsg) {\r\n  Send(3, pbmsg);\r\n}\r\n\r\nexport function C2GSGetFrdInfo(pbmsg: friend.IC2GSGetFrdInfo) {\r\n  Send(4, pbmsg);\r\n}\r\n\r\nexport function C2GSSearchFriend(pbmsg: friend.IC2GSSearchFriend) {\r\n  Send(5, pbmsg);\r\n}\r\n\r\nexport function C2GSGetHistoryMsg(pbmsg: friend.IC2GSGetHistoryMsg) {\r\n  Send(6, pbmsg);\r\n}\r\n\r\nexport function C2GSEnterChat(pbmsg: friend.IC2GSEnterChat) {\r\n  Send(7, pbmsg);\r\n}\r\n\r\nexport function C2GSMarkChat(pbmsg: friend.IC2GSMarkChat) {\r\n  Send(8, pbmsg);\r\n}\r\n\r\nexport function C2GSDelChat(pbmsg: friend.IC2GSDelChat) {\r\n  Send(9, pbmsg);\r\n}\r\n","import { ActionTree } from 'vuex';\r\nimport { SessionState } from './types';\r\nimport { RootState } from '@/store/types';\r\nimport * as netfriend from '@/net/netfriend';\r\n\r\nconst actions: ActionTree<SessionState, RootState> = {\r\n  sendMessage: ({ commit, rootState }, { target, msg }) => {\r\n    const dMsg = { iTarget: target, sMsg: msg };\r\n    netfriend.C2GSNewFrdMsg(dMsg);\r\n    // 等服务器广播，避免时间ID等数据不匹配问题\r\n    // return commit('SEND_MESSAGE', { rootState, dMsg });\r\n  },\r\n  receiveMessage: ({ commit, rootState }, payload) => commit('RECEIVE_MESSAGE', { rootState, payload }),\r\n  selectSession: ({ commit, rootState }, pid) => commit('SELECT_SESSION', { rootState, pid }),\r\n  reset: ({ commit }, payload) => commit('RESET', payload),\r\n};\r\n\r\nexport default actions;\r\n","import Vue from 'vue';\r\nimport { MutationTree } from 'vuex';\r\nimport { SessionState } from './types';\r\nimport { RootState } from '../../types';\r\nimport { friend } from '@/proto';\r\nimport * as netfriend from '@/net/netfriend';\r\n\r\nconst mutations: MutationTree<SessionState> = {\r\n  SEND_MESSAGE({\r\n    sessions,\r\n  }, { rootState, dMsg }) {\r\n    const ss = sessions;\r\n    const rState: RootState = rootState;\r\n    const target = rState.user!.users[dMsg.iTarget];\r\n    const sender = rState.profile!.user;\r\n    if (!sessions[dMsg.iTarget]) {\r\n      Vue.set(ss, dMsg.iTarget, []);\r\n    }\r\n    const list = sessions[dMsg.iTarget];\r\n    list.push(\r\n      {\r\n        id: Date.now(),\r\n        iSender: sender!.pid,\r\n        sName: sender!.sName,\r\n        sMsg: dMsg.sMsg,\r\n        iTime: Date.now(),\r\n      },\r\n    );\r\n    target.iChatTime = Date.now();\r\n  },\r\n  RECEIVE_MESSAGE({\r\n    sessions,\r\n  }, { rootState, payload }) {\r\n    const ss = sessions;\r\n    const frdMsg: friend.GS2CSendFrdMsg = payload;\r\n    const rState: RootState = rootState;\r\n    const target = rState.user!.users[frdMsg.pid];\r\n    if (!target) {\r\n      console.log('流程异常，列表不存在该玩家', frdMsg.pid);\r\n      return;\r\n    }\r\n    if (!sessions[target.pid]) {\r\n      Vue.set(ss, target.pid, []);\r\n    }\r\n    const list = sessions[target.pid];\r\n    if (frdMsg.iFlag === 1) {\r\n      list.unshift(...frdMsg.tFrdMsg);\r\n    } else {\r\n      list.push(...frdMsg.tFrdMsg);\r\n    }\r\n  },\r\n  SELECT_SESSION(state, { rootState, pid }) {\r\n    if (!pid) {\r\n      return;\r\n    }\r\n    const rState: RootState = rootState;\r\n    const gm = rState.profile!.user!.sName;\r\n    const oldPid = state.currentSessionId;\r\n    if (oldPid && oldPid !== pid) {\r\n      netfriend.C2GSEnterChat({ pid: oldPid, act: 0 });\r\n      const lGM = rState.user!.curChatGM[oldPid];\r\n      if (lGM) {\r\n        const idx = lGM.indexOf(gm);\r\n        if (idx !== -1) {\r\n          lGM!.splice(idx, 1);\r\n          const store = Vue.prototype.$store;\r\n          store.dispatch('user/updateChatGM', { pid: oldPid, sPlayer: lGM });\r\n        }\r\n      }\r\n    }\r\n    netfriend.C2GSEnterChat({ pid, act: 1 });\r\n    let lGM = rState.user!.curChatGM[pid];\r\n    if (lGM) {\r\n      const idx = lGM.indexOf(gm);\r\n      if (idx === -1) {\r\n        lGM.push(gm);\r\n        const store = Vue.prototype.$store;\r\n        store.dispatch('user/updateChatGM', { pid, sPlayer: lGM });\r\n      }\r\n    } else {\r\n      lGM = [gm];\r\n      const store = Vue.prototype.$store;\r\n      store.dispatch('user/updateChatGM', { pid, sPlayer: lGM });\r\n    }\r\n    state.currentSessionId = pid;\r\n  },\r\n  RESET(state) {\r\n    state.sessions = {};\r\n    state.currentSessionId = 0;\r\n  },\r\n};\r\n\r\nexport default mutations;\r\n","import { Module } from 'vuex';\r\n// import { getters } from './getters';\r\nimport actions from './actions';\r\nimport mutations from './mutations';\r\nimport { SessionState } from './types';\r\nimport { RootState } from '@/store/types';\r\n\r\nexport const state: SessionState = {\r\n  sessions: {},\r\n  currentSessionId: 0,\r\n};\r\n\r\nconst namespaced: boolean = true;\r\n\r\nconst session: Module<SessionState, RootState> = {\r\n  namespaced,\r\n  state,\r\n  // getters,\r\n  actions,\r\n  mutations,\r\n};\r\n\r\nexport default session;\r\n","// session/mutations.ts\r\nimport Vue from 'vue';\r\nimport { MutationTree, Store } from 'vuex';\r\nimport { RootState } from './types';\r\n\r\nconst mutations: MutationTree<RootState> = {\r\n  SOCKET_ONOPEN(state, event) {\r\n    Vue.prototype.$socket = event.currentTarget;\r\n    state.socket.isConnected = true;\r\n  },\r\n  SOCKET_ONCLOSE(state, event) {\r\n    state.socket.isConnected = false;\r\n    // console.error(state, event);\r\n  },\r\n  SOCKET_ONERROR(state, event) {\r\n    // console.error(state, event);\r\n  },\r\n  // default handler called for all methods\r\n  SOCKET_ONMESSAGE(state, message) {\r\n    state.socket.message = message.data;\r\n  },\r\n  // mutations for reconnect methods\r\n  SOCKET_RECONNECT(state, count) {\r\n    // console.info(state, count);\r\n  },\r\n  SOCKET_RECONNECT_ERROR(state) {\r\n    state.socket.isConnected = false;\r\n  },\r\n};\r\n\r\nexport default mutations;\r\n","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nimport profile from './modules/profile';\r\nimport user from './modules/user';\r\nimport session from './modules/session';\r\nimport mutations from './mutations';\r\nimport { RootState } from './types';\r\n\r\nVue.use(Vuex);\r\n\r\nconst state: RootState = {\r\n  socket: { isConnected: false, message: '' },\r\n};\r\n\r\nexport default new Vuex.Store({\r\n  state,\r\n  mutations,\r\n  modules: {\r\n    profile,\r\n    user,\r\n    session,\r\n  },\r\n});\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.isConnected),expression:\"!isConnected\"}],attrs:{\"id\":\"app\",\"element-loading-text\":\"正在连接服务器\",\"element-loading-spinner\":\"el-icon-loading\",\"element-loading-background\":\"rgba(0, 0, 0, 0.8)\"}},[_c('Index')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"index\",style:({height: _vm.clientHeight + 'px'})},[_c('Panel'),_c('p',{staticClass:\"copyright\"},[_vm._v(\" Copyright © 2015-2020 169youxi.com 版权所有 \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel\"},[_c('panel-left'),_c('panel-right')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-left\"},[_c('div',{staticClass:\"left\"},[_c('div',{staticClass:\"left-header\"},[_c('UserInfo'),_c('SearchBar')],1),_c('div',{staticClass:\"left-content\"},[_c('PlayerList')],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"user-info clearfix\"},[_c('div',{staticClass:\"user-info-avatar\"},[_c('div',{staticClass:\"img-bg avatar\",attrs:{\"uselazyload\":\"true\"}},[_c('el-avatar',{attrs:{\"shape\":\"square\",\"size\":50,\"src\":\"/assets/avatar.png\"}})],1)]),_c('div',{staticClass:\"user-info-right\"},[_c('div',{staticClass:\"user-info-right-name ellipsis\"},[_vm._v(_vm._s(_vm.$store.state.profile.user.sName))]),_c('el-select',{staticClass:\"user-info-right-game\",attrs:{\"size\":\"mini\",\"placeholder\":\"请选择\"},on:{\"change\":_vm.onSelectGame},model:{value:(_vm.gameflag),callback:function ($$v) {_vm.gameflag=$$v},expression:\"gameflag\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value,\"disabled\":item.disabled}})}),1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { User, ProfileState } from '@/store/modules/profile/types';\r\n\r\nexport default Vue.extend({\r\n  name: 'UserInfo',\r\n  computed: {\r\n    gameflag: {\r\n      get() {\r\n        const state: ProfileState = this.$store.state.profile;\r\n        if (state.user) {\r\n          return state.user!.sGameFlag;\r\n        }\r\n        return '';\r\n      },\r\n      set() {},\r\n    },\r\n    options() {\r\n      const lst: { value: string; label: string; disabled: boolean }[] = [];\r\n      const state: ProfileState = this.$store.state.profile;\r\n      if (state && state.user!.gamelist) {\r\n        const gamelist = state.user!.gamelist as string[];\r\n        gamelist.forEach((gameflag) => {\r\n          lst.push({ value: gameflag, label: gameflag, disabled: this.gameflag === gameflag });\r\n        });\r\n      }\r\n      return lst;\r\n    },\r\n  },\r\n  methods: {\r\n    onSelectGame(gameflag: string) {\r\n      if (gameflag && gameflag !== this.gameflag) {\r\n        this.$confirm(`将跳转${gameflag}客服中心, 是否继续?`, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        })\r\n          .then(() => {\r\n            this.$store.dispatch('session/reset');\r\n            this.$store.dispatch('user/reset');\r\n            this.$store.dispatch('profile/reset');\r\n            const { token } = this.$route.query;\r\n            window.location.href = `${window.location.pathname}?token=${token}&gameflag=${gameflag}`;\r\n          })\r\n          .catch(() => {\r\n            // do nothing\r\n          });\r\n      }\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./UserInfo.vue?vue&type=template&id=1f74b13d&scoped=true&\"\nimport script from \"./UserInfo.vue?vue&type=script&lang=ts&\"\nexport * from \"./UserInfo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./UserInfo.vue?vue&type=style&index=0&id=1f74b13d&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1f74b13d\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"search-bar\"},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"size\":\"small\",\"prefix-icon\":\"el-icon-search\",\"filterable\":\"\",\"remote\":\"\",\"clearable\":\"\",\"placeholder\":\"输入ID或名字搜索玩家\",\"remote-method\":_vm.searchPlayer,\"loading\":_vm.loading},on:{\"change\":_vm.handleSelect},model:{value:(_vm.inputSearch),callback:function ($$v) {_vm.inputSearch=$$v},expression:\"inputSearch\"}},_vm._l((_vm.searchResult),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.sName,\"value\":item.id}})}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport * as netfriend from '@/net/netfriend';\r\nimport { UserState } from '@/store/modules/user/types';\r\n\r\nconst debounce = require('lodash.debounce');\r\n\r\nexport default Vue.extend({\r\n  name: 'SearchBar',\r\n  data() {\r\n    return {\r\n      inputSearch: '',\r\n      loading: false,\r\n    };\r\n  },\r\n  computed: {\r\n    searchResult() {\r\n      const userState: UserState = this.$store.state.user;\r\n      return userState.searchResult;\r\n    },\r\n  },\r\n  watch: {\r\n    searchResult() {\r\n      this.loading = false;\r\n    },\r\n  },\r\n  methods: {\r\n    searchPlayer(queryString: string) {\r\n      this.loading = true;\r\n      this.lazySearch(queryString);\r\n    },\r\n    lazySearch: debounce((queryString: string) => {\r\n      const key = queryString.trim();\r\n      if (key !== '') {\r\n        netfriend.C2GSSearchFriend({ sKey: key });\r\n      }\r\n    }, 1000),\r\n    handleSelect(pid: number) {\r\n      if (!pid) {\r\n        return;\r\n      }\r\n      console.log('handleSelect', pid);\r\n      const userState: UserState = this.$store.state.user;\r\n      this.$store.dispatch('session/selectSession', pid);\r\n      if (!userState.users[pid]) {\r\n        netfriend.C2GSGetFrdInfo({ pid });\r\n      }\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchBar.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchBar.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SearchBar.vue?vue&type=template&id=bc285682&scoped=true&\"\nimport script from \"./SearchBar.vue?vue&type=script&lang=ts&\"\nexport * from \"./SearchBar.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SearchBar.vue?vue&type=style&index=0&id=bc285682&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bc285682\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog-list\"},_vm._l((_vm.players),function(player){return _c('player-box',{key:player.pid,attrs:{\"player\":player}})}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog\",class:{ active: _vm.player.pid === _vm.currentSessionId },on:{\"click\":function($event){return _vm.onSelectSession(_vm.player.pid)}}},[_c('el-badge',{style:({marginBottom:_vm.marginBottom+'px'}),attrs:{\"value\":_vm.unreadCnt,\"max\":9,\"hidden\":_vm.unreadCnt === 0}},[_c('div',{staticClass:\"dialog-avator\"},[_c('img',{staticClass:\"img-bg avatar\",class:{gray:_vm.player.iOnline === 0},attrs:{\"uselazyload\":\"true\",\"src\":_vm.utils.GameIcon(_vm.gameflag),\"onerror\":_vm.utils.DefaultIcon()}})])]),_c('span',{staticClass:\"dialog-name ellipsis\"},[_vm._v(_vm._s(_vm.player.sName))]),_c('el-dropdown',{staticClass:\"dialog-more\",attrs:{\"trigger\":\"hover\"},on:{\"command\":_vm.onCommand}},[_c('span',{staticClass:\"el-dropdown-link\"},[_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[(_vm.player.iMarked === 0)?_c('el-dropdown-item',{attrs:{\"command\":{action:'mark', pid:_vm.player.pid},\"icon\":\"el-icon-star-on\"}},[_vm._v(\"关注\")]):_c('el-dropdown-item',{attrs:{\"command\":{action:'unmark', pid:_vm.player.pid},\"icon\":\"el-icon-star-off\"}},[_vm._v(\"取关\")]),(_vm.isSuperGM)?_c('el-dropdown-item',{attrs:{\"command\":{action:'delete', pid:_vm.player.pid},\"icon\":\"el-icon-delete\"}},[_vm._v(\"移除\")]):_vm._e()],1)],1),(_vm.player.iMarked === 1)?_c('i',{staticClass:\"el-icon-star-on dialog-star\"}):_vm._e(),_c('div',{staticClass:\"label dialog-label\"},[_vm._v(_vm._s(_vm._f(\"VIP\")(_vm.player.iMoneyMax)))])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport const Money2VIP: { [key: number]: number } = {\r\n  100000: 10,\r\n  60000: 9,\r\n  40000: 8,\r\n  20000: 7,\r\n  10000: 6,\r\n  5000: 5,\r\n  2000: 4,\r\n  648: 3,\r\n  100: 2,\r\n  0: 1,\r\n};\r\n\r\nexport function GetVIP(iMoney: number): number {\r\n  let VIP = 0;\r\n  const lMoney = Object.keys(Money2VIP).map(Number).sort((a, b) => (a > b ? -1 : 1));\r\n  lMoney.forEach((m) => {\r\n    if (VIP === 0 && iMoney > m) {\r\n      VIP = Money2VIP[m];\r\n    }\r\n  });\r\n  return VIP;\r\n}\r\n\r\nexport enum IMG_TYPE {\r\n  small = 0,\r\n  big = 1,\r\n}\r\n\r\n// const HOST_IMG = 'http://192.168.1.6:8001';\r\nconst HOST_IMG = 'http://pubaudio.yuelangnet.com:8001';\r\nconst PWD_IMG = '0dd7beef22f7fd2af9918b05fc42b458';\r\n\r\nexport function GetImgUrl(sn: string, type: IMG_TYPE) {\r\n  const action = 'getpic';\r\n  return `${HOST_IMG}/?action=${action}&passport=${PWD_IMG}&picflag=${sn}&type=${type}`;\r\n}\r\n\r\nexport function DefaultIcon() {\r\n  const img = 'this.src=\\'/assets/default.png\\'';\r\n  return img;\r\n}\r\n\r\nexport function GameIcon(gameFlag: string) {\r\n  const img = `/assets/icon/icon_${gameFlag}.png`;\r\n  return img;\r\n}\r\n\r\nexport interface ThumbnailOptions {\r\n  width?: number,\r\n  height?: number,\r\n  quality?: number,\r\n  type?: string,\r\n}\r\nconst OPTIONS = {\r\n  width: 256, height: 256, quality: 80, type: 'image/png',\r\n};\r\n\r\nexport function createThumbnail(sourceBlob: Blob,\r\n  callback: (blob: Blob | null) => void,\r\n  options?: ThumbnailOptions) {\r\n  let opts: ThumbnailOptions = OPTIONS;\r\n  if (options) {\r\n    opts = { ...opts, ...options };\r\n  }\r\n  const reader = new FileReader();\r\n  reader.onload = function onload() {\r\n    const image: HTMLImageElement = new Image();\r\n    image.onload = () => {\r\n      // create an off-screen canvas\r\n      const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n      // Calculate the size of the thumbnail, to best fit within max/width (cropspadding)\r\n      const { width, height } = opts;\r\n      const thumbnailScale = (image.width / image.height) > ((width as number) / (height as number))\r\n        ? (width as number) / image.width\r\n        : (height as number) / image.height;\r\n      const thumbnailWidth = image.width * thumbnailScale;\r\n      const thumbnailHeight = image.height * thumbnailScale;\r\n      // set its dimension to target size\r\n      canvas.width = thumbnailWidth;\r\n      canvas.height = thumbnailHeight;\r\n      // draw source image into the off-screen canvas:\r\n      ctx.drawImage(image, 0, 0, thumbnailWidth, thumbnailHeight);\r\n      const { type, quality } = opts;\r\n      canvas.toBlob(callback, type, quality);\r\n    };\r\n    image.src = reader.result as string;\r\n  };\r\n  reader.readAsDataURL(sourceBlob);\r\n}\r\n\r\nexport function uploadImage(sourceBlob: Blob, callback: (ret: any) => void) {\r\n  const reader = new FileReader();\r\n  const content: { small: any, big: any } = { small: null, big: null };\r\n  const base64Header = /data:image\\/(png|jpg|jpeg);base64,/;\r\n  reader.onload = () => {\r\n    content.big = (reader.result as string).replace(base64Header, '');\r\n    createThumbnail(sourceBlob, (blob: Blob | null) => {\r\n      const reader2 = new FileReader();\r\n      reader2.onload = () => {\r\n        content.small = (reader2.result as string).replace(base64Header, '');\r\n        uploadContent(content, callback);\r\n      };\r\n      reader2.readAsDataURL(blob as Blob);\r\n    });\r\n  };\r\n  reader.readAsDataURL(sourceBlob);\r\n}\r\n\r\nfunction uploadContent(content: { small: string, big: string }, callback: (ret: any) => void) {\r\n  const action = 'putpic2';\r\n  const url = `${HOST_IMG}/?action=${action}&passport=${PWD_IMG}`;\r\n  const config = {\r\n    headers: { 'Content-Type': 'text/plain' },\r\n  };\r\n  const sContent = `big:${content.big}&small:${content.small}`;\r\n  axios.post(url, sContent, config).then((data) => {\r\n    console.log(data.data);\r\n    callback(data.data);\r\n  }).catch((error: any) => {\r\n    console.log('uploadContent error', error);\r\n    callback({ error });\r\n  });\r\n}\r\n","export const PRODUCTION = process.env.NODE_ENV === 'production';\r\n\r\n// 本地测试\r\n// export const HOST = PRODUCTION ? '42.62.106.213:8044' : '42.62.106.213:8044';\r\n\r\n// 内网测试服\r\n// export const HOST = PRODUCTION ? '192.168.1.6:8044' : 'localhost:3336';\r\n\r\n// 外网测试服\r\n// export const HOST = PRODUCTION ? '39.98.51.32:8044' : 'localhost:3336';\r\n\r\n// 正式服\r\nexport const HOST = PRODUCTION ? 'kefu-server.169youxi.cn:8044' : 'localhost:3336';\r\n\r\nexport const BIT_SUPER_GM = 0x1;\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport * as utils from '@/utils';\r\nimport * as netfriend from '@/net/netfriend';\r\nimport { friend } from '@/proto';\r\nimport * as define from '@/define';\r\n\r\nexport default Vue.extend({\r\n  name: 'Playerbox',\r\n  props: {\r\n    player: Object,\r\n  },\r\n  methods: {\r\n    onSelectSession(pid: number) {\r\n      this.$store.dispatch('session/selectSession', pid);\r\n      if (this.unreadCnt > 0) {\r\n        netfriend.C2GSReadFrdMsg({ iSender: pid });\r\n        this.$store.dispatch('user/updateNewMsgCnt', { iSender: pid, iCnt: 0 });\r\n      } else if (!this.lastMsg) {\r\n        netfriend.C2GSGetHistoryMsg({ pid, curidx: 0 });\r\n      }\r\n    },\r\n    onCommand(cmd: { action: string; pid: number }) {\r\n      console.log(cmd);\r\n      const { pid, action } = cmd;\r\n      switch (action) {\r\n        case 'mark': {\r\n          netfriend.C2GSMarkChat({ pid, act: 1 });\r\n          this.$store.dispatch('user/updateMark', { pid, iMarked: 1 });\r\n          break;\r\n        }\r\n        case 'unmark': {\r\n          netfriend.C2GSMarkChat({ pid, act: 0 });\r\n          this.$store.dispatch('user/updateMark', { pid, iMarked: 0 });\r\n          break;\r\n        }\r\n        case 'delete': {\r\n          netfriend.C2GSDelChat({ pid });\r\n          this.$store.dispatch('user/deleteUser', pid);\r\n          break;\r\n        }\r\n        default: {\r\n          console.log('unknown action', cmd);\r\n          break;\r\n        }\r\n      }\r\n      // const nextAct = act === 1 ? 0 : 1;\r\n      // netfriend.C2GSMarkChat({ pid, act: nextAct });\r\n      // this.$store.dispatch('user/updateNewMsgCnt', { iSender: pid, iCnt: 0 });\r\n    },\r\n  },\r\n  computed: {\r\n    gameflag(): string {\r\n      return this.$store.state.profile.user.sGameFlag;\r\n    },\r\n    isSuperGM(): boolean {\r\n      return (this.$store.state.profile.user.iFlag & define.BIT_SUPER_GM) === define.BIT_SUPER_GM;\r\n    },\r\n    currentSessionId(): number {\r\n      return this.$store.state.session.currentSessionId;\r\n    },\r\n    description(): string {\r\n      if (this.lastMsg) {\r\n        return this.lastMsg.sMsg;\r\n      }\r\n      return '';\r\n    },\r\n    unreadCnt(): number {\r\n      if (this.player && this.player.iUnreadCnt) {\r\n        return this.player.iUnreadCnt;\r\n      }\r\n      return 0;\r\n    },\r\n    lastMsg(): friend.GS2CSendFrdMsg.IFrdMsg | undefined {\r\n      let lst: friend.GS2CSendFrdMsg.IFrdMsg[] = [];\r\n      if (this.currentSessionId) {\r\n        lst = this.$store.state.session.sessions[this.currentSessionId];\r\n        if (lst) {\r\n          return lst[lst.length - 1];\r\n        }\r\n      }\r\n      return undefined;\r\n    },\r\n    marginBottom(): number {\r\n      return this.player.pid === this.currentSessionId ? 0 : 12;\r\n    },\r\n  },\r\n  filters: {\r\n    VIP(iMoneyMax: number) {\r\n      return `VIP${utils.GetVIP(iMoneyMax)}`;\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerBox.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerBox.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PlayerBox.vue?vue&type=template&id=7422f0e0&scoped=true&\"\nimport script from \"./PlayerBox.vue?vue&type=script&lang=ts&\"\nexport * from \"./PlayerBox.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PlayerBox.vue?vue&type=style&index=0&id=7422f0e0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7422f0e0\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport * as define from '@/define';\r\nimport { UserState, User } from '@/store/modules/user/types';\r\nimport PlayerBox from '@/components/PlayerBox.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'PlayerList',\r\n  components: {\r\n    PlayerBox,\r\n  },\r\n  computed: {\r\n    players() {\r\n      const state: UserState = this.$store.state.user;\r\n      const lst = Object.values(state.users);\r\n      return lst.sort((a: User, b: User) => {\r\n        if (a.iMarked !== b.iMarked) {\r\n          return a.iMarked > b.iMarked ? -1 : 1;\r\n        }\r\n        if (a.iUnreadCnt !== b.iUnreadCnt) {\r\n          const iUnreadCntA = a.iUnreadCnt || 0;\r\n          const iUnreadCntB = b.iUnreadCnt || 0;\r\n          return iUnreadCntA > iUnreadCntB ? -1 : 1;\r\n        }\r\n        if (a.iChatTime !== b.iChatTime) {\r\n          return a.iChatTime > b.iChatTime ? -1 : 1;\r\n        }\r\n        if (a.iOnline !== b.iOnline) {\r\n          return a.iOnline ? -1 : 1;\r\n        }\r\n        if (a.iMoneyMax !== b.iMoneyMax) {\r\n          return a.iMoneyMax > b.iMoneyMax ? -1 : 1;\r\n        }\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerList.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerList.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PlayerList.vue?vue&type=template&id=19a415aa&scoped=true&\"\nimport script from \"./PlayerList.vue?vue&type=script&lang=ts&\"\nexport * from \"./PlayerList.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PlayerList.vue?vue&type=style&index=0&id=19a415aa&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19a415aa\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport UserInfo from '@/components/UserInfo.vue';\r\nimport SearchBar from '@/components/SearchBar.vue';\r\nimport PlayerList from '@/components/PlayerList.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'PanelLeft',\r\n  components: {\r\n    UserInfo,\r\n    SearchBar,\r\n    PlayerList,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelLeft.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelLeft.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PanelLeft.vue?vue&type=template&id=60aa27f3&scoped=true&\"\nimport script from \"./PanelLeft.vue?vue&type=script&lang=ts&\"\nexport * from \"./PanelLeft.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PanelLeft.vue?vue&type=style&index=0&id=60aa27f3&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"60aa27f3\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-right\"},[_c('PlayerInfo'),_c('PanelMessage')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"head\"},[_c('div',{staticClass:\"jimi-head clearfix\"},[_c('div',{staticClass:\"customer-info-wrapper clearfix\"},[_c('div',{staticClass:\"avatar-wrapper\"},[_c('img',{staticClass:\"img-bg avatar\",class:{gray:!_vm.isOnline},attrs:{\"uselazyload\":\"true\",\"src\":_vm.utils.GameIcon(_vm.gameflag),\"onerror\":_vm.utils.DefaultIcon()}})]),_c('div',{staticClass:\"jimi-info\"},[_c('p',{staticClass:\"name\"},[_vm._v(\" \"+_vm._s(_vm.playerName)+\" \"),_c('span',[_c('el-button',{staticStyle:{\"padding\":\"0\"},attrs:{\"type\":\"text\"}},[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.user),expression:\"user\"}],ref:\"copy\",staticClass:\"el-icon-document-copy\",attrs:{\"data-clipboard-action\":\"copy\",\"data-clipboard-text\":_vm.user ? _vm.user.pid : ''},on:{\"click\":_vm.onCopy}})])],1)]),_c('p',{staticClass:\"description\"},[_vm._v(_vm._s(_vm.description))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { User } from '@/store/modules/user/types';\r\nimport * as utils from '@/utils';\r\n\r\nexport default Vue.extend({\r\n  name: 'PlayerInfo',\r\n  computed: {\r\n    gameflag(): string {\r\n      return this.$store.state.profile.user.sGameFlag;\r\n    },\r\n    user(): User | undefined {\r\n      const sid = this.$store.state.session.currentSessionId;\r\n      if (sid && this.$store.state.user.users[sid]) {\r\n        const user: User = this.$store.state.user.users[sid];\r\n        return user;\r\n      }\r\n      return undefined;\r\n    },\r\n    isOnline(): boolean {\r\n      if (this.user) {\r\n        return this.user.iOnline === 1;\r\n      }\r\n      return true;\r\n    },\r\n    playerName(): string {\r\n      if (this.user) {\r\n        return `${this.user.sName} ID:${this.user.pid}`;\r\n      }\r\n      return '先选择一位玩家';\r\n    },\r\n    description(): string {\r\n      let sDesc = '';\r\n      if (this.user) {\r\n        const u = this.user;\r\n        sDesc = `平台:${u.sPlatform}_服务器:${u.iServer}_等级:${u.iGrade}_充值:${u.iMoneyMax}`;\r\n      }\r\n      return sDesc;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      copyBtn: null, // 存储初始化复制按钮事件\r\n    };\r\n  },\r\n  methods: {\r\n    onCopy() {\r\n      this.$message({ message: 'ID复制好了', duration: 700 });\r\n    },\r\n  },\r\n  mounted() {\r\n    const Clipboard = (this as any).clipboard;\r\n    this.copyBtn = new Clipboard(this.$refs.copy);\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerInfo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlayerInfo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PlayerInfo.vue?vue&type=template&id=7181686c&scoped=true&\"\nimport script from \"./PlayerInfo.vue?vue&type=script&lang=ts&\"\nexport * from \"./PlayerInfo.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PlayerInfo.vue?vue&type=style&index=0&id=7181686c&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7181686c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body clearfix\"},[_c('div',{staticClass:\"jimi-chat\"},[_c('MessageContainer'),_c('MessageInput')],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"jimi-chat--container\",staticStyle:{\"height\":\"497px\",\"padding-bottom\":\"0px\"},attrs:{\"id\":\"container\"}},[_c('div',{directives:[{name:\"chat-scroll\",rawName:\"v-chat-scroll\",value:({always: false, smooth: true}),expression:\"{always: false, smooth: true}\"}],ref:\"scrollview\",staticClass:\"jimi-chat--wrapper\",on:{\"scroll\":_vm.handleScroll}},[_c('div',{staticClass:\"jimi-chat--log-btn\",style:({opacity:_vm.AlphaLoadMoreBtn}),on:{\"click\":_vm.loadMoreMessage}},[_vm._v(\"点击加载更多\")]),_c('div',[_c('MessageList',{attrs:{\"messages\":_vm.messages}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"messagelist\"},_vm._l((_vm.messages),function(message){return _c('MessageBox',{key:message.id,attrs:{\"message\":message}})}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message\"},[_c('div',{staticClass:\"message clearfix\",class:[_vm.isSelf ? 'waiter-message' : 'customer-message']},[_c('div',{staticClass:\"message--date\"},[_c('span',[_vm._v(_vm._s(_vm._f(\"time\")(_vm.message.iTime)))])]),_c('p',{staticClass:\"message--pin\"},[_vm._v(_vm._s(_vm.message.sName))]),_c('div',{staticClass:\"message--container clearfix\",class:[_vm.isSelf ? 'waiter-message' : 'customer-message']},[_c('div',{staticClass:\"message--head\"},[(_vm.isGM)?_c('img',{staticClass:\"img-bg avatar\",attrs:{\"src\":\"/assets/avatar.png\"}}):_c('img',{staticClass:\"img-bg avatar\",class:{gray:!_vm.isOnline},attrs:{\"src\":_vm.utils.GameIcon(_vm.gameflag),\"onerror\":_vm.utils.DefaultIcon()}})]),_c('div',{staticClass:\"message--content clearfix\"},[_c('div',{staticClass:\"message--wrapper\"},[_c('div',{staticClass:\"text-message clearfix\",class:[_vm.isSelf ? 'waiter-message' : 'customer-message'],attrs:{\"index\":\"6\",\"msgid\":_vm.message.id}},[_c('div',{staticClass:\"text-message--container\"},[(_vm.image)?_c('el-image',{staticStyle:{\"display\":\"block\"},attrs:{\"src\":_vm.image.small,\"preview-src-list\":_vm.image.big}}):_c('p',[_vm._v(_vm._s(_vm.message.sMsg))])],1)])]),_vm._m(0)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message--icon\",staticStyle:{\"display\":\"none\"}},[_c('div',{staticClass:\"message--retry\"})])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport moment from 'moment';\r\nimport * as utils from '@/utils';\r\n\r\nexport default Vue.extend({\r\n  name: 'MessageBox',\r\n  filters: {\r\n    // 将日期过滤为 hour:minutes\r\n    time: (date: number) => moment(date * 1000).format('YYYY-MM-DD HH:mm:ss'),\r\n  },\r\n  computed: {\r\n    isSelf(): boolean {\r\n      return this.message.iSender !== this.$store.state.profile.user.pid;\r\n    },\r\n    isGM(): boolean {\r\n      return this.message.iSender < 10000;\r\n    },\r\n    isOnline(): boolean {\r\n      const sender = this.$store.state.user.users[this.message.iSender];\r\n      if (sender) {\r\n        return sender.iOnline === 1;\r\n      }\r\n      return true;\r\n    },\r\n    gameflag(): string {\r\n      return this.$store.state.profile.user.sGameFlag;\r\n    },\r\n    image(): { small: string; big: string[] } | undefined {\r\n      const reg = /\\{sl_\\d+,(?<sn>\\w+)\\}/;\r\n      const msg: string = this.message.sMsg;\r\n      if (reg && msg.match(reg)) {\r\n        const { sn } = msg.match(reg)!.groups!;\r\n        return {\r\n          small: utils.GetImgUrl(sn, utils.IMG_TYPE.small),\r\n          big: [utils.GetImgUrl(sn, utils.IMG_TYPE.big)],\r\n        };\r\n      }\r\n      return undefined;\r\n    },\r\n  },\r\n  props: {\r\n    message: Object,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBox.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBox.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MessageBox.vue?vue&type=template&id=43c7937a&scoped=true&\"\nimport script from \"./MessageBox.vue?vue&type=script&lang=ts&\"\nexport * from \"./MessageBox.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MessageBox.vue?vue&type=style&index=0&id=43c7937a&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"43c7937a\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport MessageBox from '@/components/MessageBox.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'MessageList',\r\n  components: {\r\n    MessageBox,\r\n  },\r\n  props: {\r\n    messages: Array,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageList.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageList.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MessageList.vue?vue&type=template&id=7a3c20c9&scoped=true&\"\nimport script from \"./MessageList.vue?vue&type=script&lang=ts&\"\nexport * from \"./MessageList.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7a3c20c9\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { mapState } from 'vuex';\r\nimport * as define from '@/define';\r\nimport MessageList from '@/components/MessageList.vue';\r\nimport { SessionState } from '@/store/modules/session/types';\r\nimport * as netfriend from '@/net/netfriend';\r\nimport { friend } from '@/proto';\r\n\r\nconst debounce = require('lodash.debounce');\r\n\r\nexport default Vue.extend({\r\n  name: 'MessageContainer',\r\n  components: {\r\n    MessageList,\r\n  },\r\n  data() {\r\n    return {\r\n      AlphaLoadMoreBtn: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    handleScroll() {\r\n      const scrollview = this.$refs.scrollview as Element;\r\n      const btnHeight = 20;\r\n      if (scrollview.scrollTop > btnHeight) {\r\n        this.AlphaLoadMoreBtn = 0;\r\n      } else {\r\n        this.AlphaLoadMoreBtn = (btnHeight - scrollview.scrollTop) / btnHeight;\r\n      }\r\n    },\r\n    loadMoreMessage() {\r\n      const pid = this.currentSessionId;\r\n      let curidx = 0;\r\n      if (this.messages.length > 0) {\r\n        curidx = this.messages[0].id;\r\n      }\r\n      netfriend.C2GSGetHistoryMsg({ pid, curidx });\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState('session', {\r\n      sessions: (state: SessionState) => state.sessions,\r\n    }),\r\n    currentSessionId(): number {\r\n      if (this.$store.state.session.currentSessionId) {\r\n        return this.$store.state.session.currentSessionId;\r\n      }\r\n      return 0;\r\n    },\r\n    messages(): friend.GS2CSendFrdMsg.IFrdMsg[] {\r\n      let lst: friend.GS2CSendFrdMsg.IFrdMsg[] = [];\r\n      if (this.currentSessionId) {\r\n        lst = (this as any).sessions[this.currentSessionId];\r\n      }\r\n      return lst;\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MessageContainer.vue?vue&type=template&id=58949550&\"\nimport script from \"./MessageContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./MessageContainer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MessageContainer.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-field\"},[_c('div',{staticClass:\"input-field--toolbar\"},[_c('el-row',{attrs:{\"type\":\"flex\"}},[_c('el-col',{attrs:{\"span\":3}},[_c('a',{staticClass:\"file\",attrs:{\"href\":\"javascript:;\"}},[_c('i',{staticClass:\"el-icon-picture\"}),_c('input',{attrs:{\"type\":\"file\",\"accept\":\"image/png, image/jpeg, image/jpg\",\"id\":\"inputSelectImage\"},on:{\"change\":function (e){_vm.onSelectImage(e)}}})])]),_c('el-col',[_c('p',{staticClass:\"input-field--gm\"},[_vm._v(_vm._s(_vm.curChatGM))])])],1)],1),_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":\"3\",\"resize\":\"none\",\"placeholder\":\"Ctrl+Enter发送消息\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if(!$event.ctrlKey){ return null; }return _vm.onSubmit($event)}},model:{value:(_vm.textarea),callback:function ($$v) {_vm.textarea=$$v},expression:\"textarea\"}}),_c('el-button',{staticClass:\"input-field--send-btn\",attrs:{\"slot\":\"reference\",\"plain\":\"\",\"disabled\":_vm.disabled,\"size\":\"mini\"},on:{\"click\":_vm.onSubmit},slot:\"reference\"},[_vm._v(\"发送\")]),_c('el-dialog',{attrs:{\"title\":\"是否发送图片\",\"visible\":_vm.imageVisible,\"width\":\"20%\",\"center\":\"\",\"close-on-press-escape\":false},on:{\"update:visible\":function($event){_vm.imageVisible=$event},\"close\":_vm.clearInputFile}},[_c('el-image',{staticClass:\"image\",attrs:{\"src\":_vm.pasteImageData.small,\"preview-src-list\":[_vm.pasteImageData.big ],\"fit\":\"contain\"}}),_c('div',{staticClass:\"bottom\"},[_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.onClearPasteImageData}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.onSubmitImageData}},[_vm._v(\"发送\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from '@/utils';\r\n\r\nexport default Vue.extend({\r\n  name: 'MessageInput',\r\n  data() {\r\n    return {\r\n      textarea: '',\r\n      pasteImageData: { small: '', big: '' },\r\n      imageVisible: false,\r\n      imageSourceBlob: new Blob(),\r\n    };\r\n  },\r\n  mounted() {\r\n    const that = this;\r\n    document.onpaste = function onpaste(this: DocumentAndElementEventHandlers, ev: ClipboardEvent) {\r\n      for (let i = 0; i < ev.clipboardData!.items.length; i += 1) {\r\n        const item = ev.clipboardData!.items[i];\r\n        if (item.type.indexOf('image') > -1) {\r\n          ev.preventDefault();\r\n          const sourceBlob = item.getAsFile() as Blob;\r\n          console.log('粘贴板图片', sourceBlob.size);\r\n          that.showImageBeforeSend(sourceBlob);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n    document.ondrop = function ondrop(this: GlobalEventHandlers, ev: DragEvent) {\r\n      for (let i = 0; i < ev.dataTransfer!.items.length; i += 1) {\r\n        const item = ev.dataTransfer!.items[i];\r\n        if (item.type.indexOf('image') > -1) {\r\n          ev.preventDefault();\r\n          const sourceBlob = item.getAsFile() as Blob;\r\n          console.log('拖拽图片', sourceBlob.size);\r\n          that.showImageBeforeSend(sourceBlob);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    disabled(): boolean {\r\n      return this.textarea === '';\r\n    },\r\n    curChatGM(): string {\r\n      const { state } = this.$store;\r\n      const sid = state.session.currentSessionId;\r\n      const lGM = state.user.curChatGM[sid] as string[];\r\n      if (lGM) {\r\n        return `${lGM.join('、')}正在查看`;\r\n      }\r\n      return '';\r\n    },\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      if (this.textarea !== '') {\r\n        const sid = this.$store.state.session.currentSessionId;\r\n        this.$store.dispatch('session/sendMessage', { target: sid, msg: this.textarea });\r\n        this.textarea = '';\r\n      }\r\n    },\r\n    clearInputFile() {\r\n      const f = document.getElementById('inputSelectImage') as any;\r\n      f.value = '';\r\n    },\r\n    onClearPasteImageData() {\r\n      this.imageVisible = false;\r\n    },\r\n    onSelectImage(e: Event) {\r\n      const imgFile = (e.target as any).files[0] as Blob;\r\n      if (imgFile) {\r\n        console.log('选择图片', imgFile.size);\r\n        this.showImageBeforeSend(imgFile);\r\n      }\r\n      // reads.readAsDataURL(f);\r\n      // reads.οnlοad = function(e) {\r\n      //   document.getElementById('show').src = this.result;\r\n      // };\r\n    },\r\n    onSubmitImageData() {\r\n      this.imageVisible = false;\r\n      utils.uploadImage(this.imageSourceBlob, (ret: any) => {\r\n        if (ret.serialnum) {\r\n          const msg = `{sl_27,${ret.serialnum}}`;\r\n          const sid = this.$store.state.session.currentSessionId;\r\n          this.$store.dispatch('session/sendMessage', { target: sid, msg });\r\n        } else {\r\n          this.$message(`上传图片失败[${ret.error}]`);\r\n        }\r\n      });\r\n    },\r\n    showImageBeforeSend(sourceBlob: Blob) {\r\n      this.imageSourceBlob = sourceBlob;\r\n      utils.createThumbnail(sourceBlob, (b: Blob | null) => {\r\n        if (b) {\r\n          const reader2 = new FileReader();\r\n          reader2.onloadend = () => {\r\n            this.pasteImageData.small = reader2.result as string;\r\n            this.imageVisible = true;\r\n          };\r\n          reader2.readAsDataURL(b);\r\n        }\r\n      });\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        this.pasteImageData.big = reader.result as string;\r\n      };\r\n      reader.readAsDataURL(sourceBlob);\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageInput.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageInput.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MessageInput.vue?vue&type=template&id=4fe04931&scoped=true&\"\nimport script from \"./MessageInput.vue?vue&type=script&lang=ts&\"\nexport * from \"./MessageInput.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MessageInput.vue?vue&type=style&index=0&id=4fe04931&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4fe04931\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport * as define from '@/define';\r\nimport MessageContainer from '@/components/MessageContainer.vue';\r\nimport MessageInput from '@/components/MessageInput.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'PanelMessage',\r\n  components: {\r\n    MessageContainer,\r\n    MessageInput,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelMessage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelMessage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PanelMessage.vue?vue&type=template&id=234961f5&scoped=true&\"\nimport script from \"./PanelMessage.vue?vue&type=script&lang=ts&\"\nexport * from \"./PanelMessage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PanelMessage.vue?vue&type=style&index=0&id=234961f5&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"234961f5\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport PlayerInfo from '@/components/PlayerInfo.vue';\r\nimport PanelMessage from '@/components/PanelMessage.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'PanelRight',\r\n  components: {\r\n    PlayerInfo,\r\n    PanelMessage,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelRight.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelRight.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PanelRight.vue?vue&type=template&id=153cc24a&scoped=true&\"\nimport script from \"./PanelRight.vue?vue&type=script&lang=ts&\"\nexport * from \"./PanelRight.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"153cc24a\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport PanelLeft from '@/components/PanelLeft.vue';\r\nimport PanelRight from '@/components/PanelRight.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'Panel',\r\n  components: {\r\n    PanelLeft,\r\n    PanelRight,\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Panel.vue?vue&type=template&id=2e222124&\"\nimport script from \"./Panel.vue?vue&type=script&lang=ts&\"\nexport * from \"./Panel.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Panel.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport Panel from '@/components/Panel.vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'Index',\r\n  data() {\r\n    return {\r\n      clientHeight: 1000,\r\n    };\r\n  },\r\n  components: {\r\n    Panel,\r\n  },\r\n  mounted() {\r\n    this.clientHeight = window.innerHeight;\r\n    window.onresize = () => {\r\n      this.clientHeight = window.innerHeight;\r\n    };\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=3158f980&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=ts&\"\nexport * from \"./Index.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=3158f980&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3158f980\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\n// @ts-ignore\r\nimport VueChatScroll from 'vue-chat-scroll';\r\n\r\nimport store from '@/store';\r\nimport Index from '@/views/Index.vue';\r\nimport { netcommand } from './proto';\r\nimport * as netlogin from '@/net/netlogin';\r\nimport * as utils from '@/utils';\r\n\r\nVue.use(VueChatScroll);\r\nVue.prototype.utils = utils;\r\n\r\nexport default Vue.extend({\r\n  name: 'App',\r\n  store,\r\n  components: {\r\n    Index,\r\n  },\r\n  mounted() {\r\n    Vue.prototype.$store = store;\r\n  },\r\n  computed: {\r\n    message(): any {\r\n      return this.$store.state.socket.message;\r\n    },\r\n    isConnected(): boolean {\r\n      return this.$store.state.socket.isConnected;\r\n    },\r\n  },\r\n  watch: {\r\n    message(): void {\r\n      // console.log('watch message->', this.message);\r\n    },\r\n    isConnected(): void {\r\n      if (this.isConnected) {\r\n        const { token, gameflag } = this.$route.query;\r\n        if (!token) {\r\n          this.$alert('缺少token参数', '提示', {\r\n            confirmButtonText: '确定',\r\n            callback: (action) => {\r\n              this.$message({\r\n                type: 'info',\r\n                message: `action: ${action}`,\r\n              });\r\n            },\r\n          });\r\n          return;\r\n        }\r\n        const sToken = token as string;\r\n        let sGameFlag = gameflag as string;\r\n        if (!sGameFlag) {\r\n          sGameFlag = '';\r\n        }\r\n        netlogin.C2GSVertify({ sToken, sGameFlag });\r\n      }\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2bff14b4&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport 'normalize.css';\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\n// @ts-ignore\r\nimport VueNativeSock from 'vue-native-websocket';\r\n// @ts-ignore\r\nimport clipboard from 'clipboard';\r\nimport router from './router';\r\nimport store from './store';\r\nimport App from './App.vue';\r\nimport * as net from '@/net/net';\r\nimport * as define from './define';\r\n\r\n// 注册到vue原型上\r\nVue.prototype.clipboard = clipboard;\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(ElementUI);\r\n\r\nVue.use(VueNativeSock, `ws://${define.HOST}`, {\r\n  store,\r\n  passToStoreHandler: (eventName: string, event: any, next: Function) => {\r\n    if (event.data) {\r\n      if (event.data.arrayBuffer) {\r\n        event.data.arrayBuffer().then((data: any) => {\r\n          const pkg = new Uint8Array(data);\r\n          net.DecodeAndDispatch(pkg);\r\n        });\r\n      } else {\r\n        console.error('需要更新到最新版本Chrome浏览器');\r\n      }\r\n    }\r\n    next(eventName, event);\r\n  },\r\n  reconnection: true, // (Boolean) whether to reconnect automatically (false)\r\n  reconnectionAttempts: 5, // (Number) number of reconnection attempts before giving up (Infinity),\r\n  reconnectionDelay: 3000, // (Number) how long to initially wait before attempting a new (1000)\r\n});\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App),\r\n}).$mount('#app');\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageInput.vue?vue&type=style&index=0&id=4fe04931&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageInput.vue?vue&type=style&index=0&id=4fe04931&lang=less&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageContainer.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageContainer.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=3158f980&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=3158f980&lang=less&scoped=true&\""],"sourceRoot":""}